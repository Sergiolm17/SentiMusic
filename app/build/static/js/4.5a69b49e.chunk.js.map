{"version":3,"sources":["files/Spotify.svg","files/Add.svg","components/list.jsx","pages/recomendation.jsx"],"names":["module","exports","artist","name","src","preview_url","onClick","valence","external_urls","useState","disabled","setdisabled","className","alt","style","height","href","target","rel","Spotify","controls","preload","Add","imgStyle","margin","nowPlaying","state","useCreatePlaylist","playlist_id","genre_re","useRecomendation","recomendation","titlePlaylist","title","normal","display","gridTemplateColumns","alignItems","spotify","map","music","indexaudio","key","album","images","url","id","artists","addtoPlaylist","uri"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,gICI5B,G,MAAA,YAQR,IAPLC,EAOI,EAPJA,OACAC,EAMI,EANJA,KACAC,EAKI,EALJA,IACAC,EAII,EAJJA,YAEAC,GAEI,EAHJC,QAGI,EAFJD,SACAE,EACI,EADJA,cACI,EAC4BC,oBAAS,GADrC,mBACGC,EADH,KACaC,EADb,KAMJ,OAAKN,EAEH,yBAAKO,UAAU,kBACb,6BACE,yBAAKC,IAAKV,EAAMC,IAAKA,EAAKU,MAAO,CAAEC,OAAQ,WAE7C,yBAAKH,UAAU,YACb,0BAAMA,UAAU,aAAaT,GAC7B,0BAAMS,UAAU,eAAeV,IAGjC,yBAAKU,UAAU,aACb,uBAAGI,KAAMR,EAAeS,OAAO,SAASC,IAAI,uBAC1C,yBAAKd,IAAKe,IAASN,IAAI,eAAeD,UAAU,gBAIpD,yBACEA,UAAS,qBAAgBF,EAAW,eAAiB,mBAErD,2BAAOU,UAAU,EAAMhB,IAAKC,EAAagB,QAAQ,QAAjD,oCAEE,uCAFF,eAKAX,GACA,4BAAQA,SAAUA,EAAUE,UAAU,YAAYN,QA9B1C,WACZK,GAAY,GACZL,MA6BM,yBAAKF,IAAKkB,IAAKT,IAAI,WAAWD,UAAU,gBA3BvB,K,eCPrBW,EAAW,CACfC,OAAQ,QAEK,sBAA4B,IAAzBC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,MAAY,EAClBC,cAAfC,EADiC,sBAEXnB,mBAAS,MAFE,mBAEjCoB,EAFiC,aAIhBC,YAAiBL,EAAYC,EAAOG,IAArDE,EAJiC,oBAclCC,EAAgB,4BARR,SAAAN,GACZ,OAAc,IAAVA,EAAoB,sBACV,IAAVA,EAAoB,iBACV,IAAVA,EAAoB,WACV,IAAVA,EAAoB,YACjB,YAGkBO,CAAMP,IACjC,OACE,kBAAC,IAAD,CAAMQ,QAAM,GACV,yBACEpB,MAAO,CACLqB,QAAS,OACTC,oBAAqB,WACrBC,WAAY,WAGbL,EACAJ,EAAYpB,eACX,kBAAC,IAAD,CAAMQ,KAAMY,EAAYpB,cAAc8B,QAASxB,MAAOS,GAAtD,4BAKHQ,EAAcQ,IAAI,SAACC,EAAOC,GAAR,OACjB,yBAAKC,IAAKD,GACPD,EAAMG,MAAMC,OAAO,GAAGC,KACrB,kBAAC,EAAD,CACEH,IAAKF,EAAMM,GACX5C,OAAQsC,EAAMO,QAAQ,GAAG5C,KACzBA,KAAMqC,EAAMrC,KACZC,IAAKoC,EAAMG,MAAMC,OAASJ,EAAMG,MAAMC,OAAO,GAAGC,IAAM,GACtDxC,YAAamC,EAAMnC,YACnBE,QAASiC,EAAMjC,QACfD,QAAS,kBAAM0C,YAAcpB,EAAYkB,GAAIN,EAAMS,MACnDzC,cAAegC,EAAMhC,cAAc8B","file":"static/js/4.5a69b49e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Spotify.b880b192.svg\";","module.exports = __webpack_public_path__ + \"static/media/Add.b99d50c6.svg\";","import React, { useState } from \"react\";\r\nimport Spotify from \"../files/Spotify.svg\";\r\nimport Add from \"../files/Add.svg\";\r\nimport \"./list.scss\";\r\nexport default ({\r\n  artist,\r\n  name,\r\n  src,\r\n  preview_url,\r\n  valence,\r\n  onClick,\r\n  external_urls\r\n}) => {\r\n  const [disabled, setdisabled] = useState(false);\r\n  const click = () => {\r\n    setdisabled(true);\r\n    onClick();\r\n  };\r\n  if (!preview_url) return \"\";\r\n  return (\r\n    <div className=\"list-container\">\r\n      <div>\r\n        <img alt={name} src={src} style={{ height: \"50px\" }} />\r\n      </div>\r\n      <div className=\"list-who\">\r\n        <span className=\"list-name\">{name}</span>\r\n        <span className=\"list-artist\">{artist}</span>\r\n      </div>\r\n\r\n      <div className=\"gotoSpoty\">\r\n        <a href={external_urls} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <img src={Spotify} alt=\"Spotify Logo\" className=\"imageList\" />\r\n        </a>\r\n      </div>\r\n\r\n      <div\r\n        className={`list-audio ${disabled ? \"active-audio\" : \"disabled-audio\"}`}\r\n      >\r\n        <audio controls={true} src={preview_url} preload=\"none\">\r\n          Your browser does not support the\r\n          <code>audio</code> element.\r\n        </audio>\r\n      </div>\r\n      {!disabled && (\r\n        <button disabled={disabled} className=\"add-music\" onClick={click}>\r\n          <img src={Add} alt=\"Add Logo\" className=\"imageList\" />\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n/*\r\n\r\n      <div className=\"list-valence\">\r\n        <span className=\"valence\">{valence}</span>\r\n      </div>\r\n\r\n  <div>\r\n        <audio controls={true} src={preview_url} preload=\"none\">\r\n          Your browser does not support the\r\n          <code>audio</code> element.\r\n        </audio>\r\n      </div>\r\n\r\n*/\r\n","import React, { useState } from \"react\";\r\nimport Card from \"../components/card\";\r\nimport List from \"../components/list\";\r\nimport Link from \"../components/ahref\";\r\n//import Genre from \"../components/genre\";\r\n\r\nimport {\r\n  useRecomendation,\r\n  addtoPlaylist,\r\n  useCreatePlaylist\r\n} from \"../hooks/User\";\r\nconst imgStyle = {\r\n  margin: \"20px\"\r\n};\r\nexport default ({ nowPlaying, state }) => {\r\n  const [playlist_id] = useCreatePlaylist();\r\n  const [genre_re, setGenre] = useState(null);\r\n\r\n  const [recomendation] = useRecomendation(nowPlaying, state, genre_re);\r\n\r\n  const title = state => {\r\n    if (state === 0) return \"Playlist automatica\";\r\n    if (state === 1) return \"Playlist Feliz\";\r\n    if (state === 2) return \"Modo Sad\";\r\n    if (state === 3) return \"Modo Cool\";\r\n    return \"Me buggie\";\r\n  };\r\n\r\n  const titlePlaylist = <h2>{title(state)}</h2>;\r\n  return (\r\n    <Card normal>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"auto 40%\",\r\n          alignItems: \"center\"\r\n        }}\r\n      >\r\n        {titlePlaylist}\r\n        {playlist_id.external_urls && (\r\n          <Link href={playlist_id.external_urls.spotify} style={imgStyle}>\r\n            Ir a la playlist creada\r\n          </Link>\r\n        )}\r\n      </div>\r\n      {recomendation.map((music, indexaudio) => (\r\n        <div key={indexaudio}>\r\n          {music.album.images[0].url && (\r\n            <List\r\n              key={music.id}\r\n              artist={music.artists[0].name}\r\n              name={music.name}\r\n              src={music.album.images ? music.album.images[0].url : \"\"}\r\n              preview_url={music.preview_url}\r\n              valence={music.valence}\r\n              onClick={() => addtoPlaylist(playlist_id.id, music.uri)}\r\n              external_urls={music.external_urls.spotify}\r\n            />\r\n          )}\r\n        </div>\r\n      ))}\r\n    </Card>\r\n  );\r\n};\r\n/*\r\n <Genre\r\n        data={genre => {\r\n          if (genre !== genre_re) {\r\n            setGenre(genre);\r\n            console.log(genre);\r\n          }\r\n        }}\r\n      />\r\n\r\n*/\r\n"],"sourceRoot":""}