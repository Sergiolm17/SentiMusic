{"version":3,"sources":["hooks/data.js","services/firebase_service.js","hooks/service.js","hooks/User.js","components/card.jsx","components/ahref.jsx","files/DOMO.svg","Firebase.js","files/Logo.svg","pages/login.jsx","pages/getToke.jsx","App.js","pages/error.jsx","serviceWorker.js","index.js","Routes.js"],"names":["urlprod","appurl","appurl_refresh","db","firebase","firestore","getUserData","user","returnUser","id","analytics","setUserId","docRef","collection","doc","get","then","exists","data","setCurrentScreen","set","console","log","updateData","functionReturn","merge","catch","error","PostTransition","from","to","logEvent","date","Date","add","useRemoteConfig","useState","useEffect","a","remoteConfig","fetchAndActivate","getString","init","getHashParams","SpotifyWebApi","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","spotifyApi","querystring","require","useAccessToken","params","loggedIn","setloggedIn","localStorage","getItem","access_token","refresh_token","setAccessToken","setItem","useGetMe","me","setme","getMe","useGetNowPlaying","name","artist","albumArt","is_playing","uri","nowPlaying","setnowPlaying","current","setcurrent","setError","IsPlaying","interval","setInterval","getMyCurrentPlaybackState","err","response","function_return","fetch","stringify","json","request_refresh","JSON","parse","removeItem","clearInterval","item","currently_playing_type","album","images","url","artists","getCurrent","useRecomendation","state","genre","musicsaved","recomendation","setrecomendation","trace_Recomendation","perf","trace","start","genreSwitch","seed_genres","seed_tracks_fun","length","seed_tracks_","join","seed_tracks","finalOptions","min_valence","max_valence","valence","getRecommendations","limit","market","stop","tracks","useCallsaveData","setmusicsaved","getMySavedTracks","offset","newdata","items","map","track","useCreatePlaylist","playlist_id","setplaylist_id","playlist","setplaylist","getPlaylist","dataGet","body","createPlaylist","public","collaborative","description","device","addtoPlaylist","addTracksToPlaylist","play","alert","children","normal","className","href","newtab","button","onClick","target","module","exports","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","performance","settings","minimumFetchIntervalMillis","defaultConfig","testeo","imgStyle","margin","src","Domo","alt","style","Logo","props","search","Content","lazy","App","setLoginstate","fallback","ErrorBoundary","hasError","errorInfo","this","React","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","path","exact","component","GetToken","document","getElementById","URL","process","origin","addEventListener","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.495e63b8.chunk.js","sourcesContent":["//const urllocal = \"http://34.68.6.184:4001\";\r\nconst urllocal = \"https://us-central1-domo-music.cloudfunctions.net/app\";\r\nconst urlprod = \"https://us-central1-domo-music.cloudfunctions.net/app\";\r\n\r\nlet appurl =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? urlprod + \"/login\"\r\n    : urllocal + \"/login\";\r\nlet appurl_refresh =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? urlprod + \"/refresh_token?\"\r\n    : urllocal + \"/refresh_token?\";\r\nlet genre = [\r\n  \"acoustic\",\r\n  \"afrobeat\",\r\n  \"alt-rock\",\r\n  \"alternative\",\r\n  \"ambient\",\r\n  \"anime\",\r\n  \"black-metal\",\r\n  \"bluegrass\",\r\n  \"blues\",\r\n  \"bossanova\",\r\n  \"brazil\",\r\n  \"breakbeat\",\r\n  \"british\",\r\n  \"cantopop\",\r\n  \"chicago-house\",\r\n  \"children\",\r\n  \"chill\",\r\n  \"classical\",\r\n  \"club\",\r\n  \"comedy\",\r\n  \"country\",\r\n  \"dance\",\r\n  \"dancehall\",\r\n  \"death-metal\",\r\n  \"deep-house\",\r\n  \"detroit-techno\",\r\n  \"disco\",\r\n  \"disney\",\r\n  \"drum-and-bass\",\r\n  \"dub\",\r\n  \"dubstep\",\r\n  \"edm\",\r\n  \"electro\",\r\n  \"electronic\",\r\n  \"emo\",\r\n  \"folk\",\r\n  \"forro\",\r\n  \"french\",\r\n  \"funk\",\r\n  \"garage\",\r\n  \"german\",\r\n  \"gospel\",\r\n  \"goth\",\r\n  \"grindcore\",\r\n  \"groove\",\r\n  \"grunge\",\r\n  \"guitar\",\r\n  \"happy\",\r\n  \"hard-rock\",\r\n  \"hardcore\",\r\n  \"hardstyle\",\r\n  \"heavy-metal\",\r\n  \"hip-hop\",\r\n  \"holidays\",\r\n  \"honky-tonk\",\r\n  \"house\",\r\n  \"idm\",\r\n  \"indian\",\r\n  \"indie\",\r\n  \"indie-pop\",\r\n  \"industrial\",\r\n  \"iranian\",\r\n  \"j-dance\",\r\n  \"j-idol\",\r\n  \"j-pop\",\r\n  \"j-rock\",\r\n  \"jazz\",\r\n  \"k-pop\",\r\n  \"kids\",\r\n  \"latin\",\r\n  \"latino\",\r\n  \"malay\",\r\n  \"mandopop\",\r\n  \"metal\",\r\n  \"metal-misc\",\r\n  \"metalcore\",\r\n  \"minimal-techno\",\r\n  \"movies\",\r\n  \"mpb\",\r\n  \"new-age\",\r\n  \"new-release\",\r\n  \"opera\",\r\n  \"pagode\",\r\n  \"party\",\r\n  \"philippines-opm\",\r\n  \"piano\",\r\n  \"pop\",\r\n  \"pop-film\",\r\n  \"post-dubstep\",\r\n  \"power-pop\",\r\n  \"progressive-house\",\r\n  \"psych-rock\",\r\n  \"punk\",\r\n  \"punk-rock\",\r\n  \"r-n-b\",\r\n  \"rainy-day\",\r\n  \"reggae\",\r\n  \"reggaeton\",\r\n  \"road-trip\",\r\n  \"rock\",\r\n  \"rock-n-roll\",\r\n  \"rockabilly\",\r\n  \"romance\",\r\n  \"sad\",\r\n  \"salsa\",\r\n  \"samba\",\r\n  \"sertanejo\",\r\n  \"show-tunes\",\r\n  \"singer-songwriter\",\r\n  \"ska\",\r\n  \"sleep\",\r\n  \"songwriter\",\r\n  \"soul\",\r\n  \"soundtracks\",\r\n  \"spanish\",\r\n  \"study\",\r\n  \"summer\",\r\n  \"swedish\",\r\n  \"synth-pop\",\r\n  \"tango\",\r\n  \"techno\",\r\n  \"trance\",\r\n  \"trip-hop\",\r\n  \"turkish\",\r\n  \"work-out\",\r\n  \"world-music\"\r\n];\r\nexport { appurl, appurl_refresh, genre };\r\n","import firebase, { analytics, remoteConfig } from \"../Firebase\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst db = firebase.firestore();\r\nfunction getUserData(user, returnUser) {\r\n  if (user.id) {\r\n    analytics.setUserId(user.id);\r\n    var docRef = db.collection(\"users\").doc(user.id);\r\n    docRef.get().then(function(doc) {\r\n      if (doc.exists) {\r\n        returnUser(doc.data());\r\n        analytics.setCurrentScreen(\"hola\");\r\n      } else {\r\n        docRef.set({\r\n          ...user\r\n        });\r\n        // doc.data() will be undefined in this case\r\n        console.log(\"No such document!\");\r\n        returnUser(user, \"No such document!\");\r\n      }\r\n    });\r\n  } else {\r\n    returnUser(null, \"Not receive user\");\r\n  }\r\n}\r\nfunction updateData(user, data, functionReturn) {\r\n  if (user) {\r\n    console.log(user);\r\n\r\n    var docRef = db.collection(\"users\").doc(user.id);\r\n    docRef\r\n      .set(data, { merge: true })\r\n      .then(() => {\r\n        functionReturn(data);\r\n      })\r\n      .catch(function(error) {\r\n        functionReturn(null, error);\r\n      });\r\n  } else {\r\n    functionReturn(null, \"No such user!\");\r\n  }\r\n}\r\nfunction PostAccion(user, accion) {\r\n  firebase\r\n    .firestore()\r\n    .collection(\"actions\")\r\n    .add({\r\n      user,\r\n      accion,\r\n      date: new Date()\r\n    });\r\n}\r\nfunction PostTransition(user, from, to) {\r\n  if (user.id) {\r\n    analytics.logEvent(\"post_accion\", {\r\n      user: user.id,\r\n      from,\r\n      to,\r\n      date: new Date()\r\n    });\r\n    firebase\r\n      .firestore()\r\n      .collection(\"transition\")\r\n      .add({\r\n        user: user.id,\r\n        from,\r\n        to,\r\n        date: new Date()\r\n      });\r\n  }\r\n}\r\nfunction useRemoteConfig() {\r\n  const [data, setData] = useState(false);\r\n  useEffect(() => {\r\n    async function init() {\r\n      await remoteConfig.fetchAndActivate();\r\n      console.log(\"Remote-config initialized\");\r\n      console.log(remoteConfig.getString(\"testeo\"));\r\n    }\r\n    init();\r\n  });\r\n\r\n  return [data];\r\n}\r\nexport { getUserData, updateData, PostAccion, PostTransition, useRemoteConfig };\r\n","import { useState, useEffect } from \"react\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\nconst getHashParams = () => {\r\n  var hashParams = {};\r\n  var e,\r\n    r = /([^&;=]+)=?([^&;]*)/g,\r\n    q = window.location.hash.substring(1);\r\n  e = r.exec(q);\r\n  while (e) {\r\n    hashParams[e[1]] = decodeURIComponent(e[2]);\r\n    e = r.exec(q);\r\n  }\r\n\r\n  return hashParams;\r\n};\r\nconst useGetDevice = nowPlaying => {\r\n  const [devices, setdevices] = useState([]);\r\n  useEffect(() => {\r\n    if (nowPlaying.id) {\r\n      spotifyApi.getMyDevices().then(data => setdevices(data.devices));\r\n    }\r\n  }, [nowPlaying.id]);\r\n  return [devices];\r\n};\r\n\r\nexport { getHashParams, useGetDevice };\r\n","import { useState, useEffect } from \"react\";\r\nimport { getHashParams, useGetDevice } from \"./service\";\r\nimport { appurl, appurl_refresh } from \"./data\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\nimport {\r\n  getUserData,\r\n  updateData,\r\n  useRemoteConfig\r\n} from \"../services/firebase_service\";\r\nimport { perf, analytics } from \"../Firebase\";\r\n//var querystring = require(\"querystring\");\r\n\r\nconst spotifyApi = new SpotifyWebApi();\r\nvar querystring = require(\"querystring\");\r\n\r\nfunction useAccessToken() {\r\n  const [data] = useRemoteConfig()\r\n  const params = getHashParams();\r\n  const [loggedIn, setloggedIn] = useState(true);\r\n  const [access_token /*, setaccess_token*/] = useState(\r\n    localStorage.getItem(\"access_token\") || params.access_token || \"\"\r\n  );\r\n  const [refresh_token /*, setRefresh_token*/] = useState(\r\n    localStorage.getItem(\"refresh_token\") || params.refresh_token || \"\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (access_token) {\r\n      spotifyApi.setAccessToken(access_token);\r\n      localStorage.setItem(\"access_token\", access_token);\r\n      localStorage.setItem(\"refresh_token\", refresh_token);\r\n    }\r\n    console.log(access_token);\r\n\r\n    setloggedIn(access_token ? true : false);\r\n  }, [access_token, refresh_token]);\r\n  return loggedIn;\r\n}\r\nconst useGetMe = () => {\r\n  const [me, setme] = useState({});\r\n  useEffect(() => {\r\n    spotifyApi.getMe().then(user => {\r\n      setme(user);\r\n    });\r\n  }, []);\r\n  return [me];\r\n};\r\nconst useGetNowPlaying = () => {\r\n  const [nowPlaying, setnowPlaying] = useState({\r\n    name: \"\",\r\n    artist: \"\",\r\n    albumArt: \"\",\r\n    is_playing: false,\r\n    uri: \"\",\r\n    id: \"\"\r\n  });\r\n  const [current, setcurrent] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  useEffect(() => {\r\n    //getCurrent();\r\n    var IsPlaying = false;\r\n\r\n    const interval = setInterval(() => getCurrent(), 4000);\r\n    function getCurrent() {\r\n      if (localStorage.getItem(\"access_token\"))\r\n        spotifyApi.getMyCurrentPlaybackState((err, response) => {\r\n          if (err) {\r\n            //console.log(JSON.parse(err.response).error);\r\n            if (localStorage.getItem(\"refresh_token\"))\r\n              request_refresh(JSON.parse(err.response).error, data => {\r\n                if (data.access_token)\r\n                  spotifyApi.setAccessToken(data.access_token);\r\n                else {\r\n                  setError(true);\r\n                  eliminar();\r\n                  clearInterval(interval);\r\n                }\r\n              });\r\n          } else {\r\n            IsPlaying = response ? response.is_playing : false;\r\n            setError(false);\r\n            setcurrent(response ? response.is_playing : false);\r\n            if (\r\n              response.item &&\r\n              response.currently_playing_type !== \"episode\"\r\n            ) {\r\n              setnowPlaying({\r\n                name: response.item.name,\r\n                albumArt: response.item.album.images[0].url,\r\n                is_playing: response.is_playing,\r\n                uri: response.item.uri,\r\n                id: response.item.id,\r\n                artist: response.item.artists[0].name\r\n              });\r\n            }\r\n          }\r\n        });\r\n      return IsPlaying;\r\n    }\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    console.log(nowPlaying);\r\n\r\n    if (nowPlaying.uri) {\r\n      console.log(\"nowPlaying\");\r\n      analytics.logEvent(\"now_playing\", nowPlaying);\r\n    }\r\n  }, [nowPlaying.uri]);\r\n  return { nowPlaying, error, current };\r\n};\r\nfunction request_refresh(error, function_return) {\r\n  const params = getHashParams();\r\n\r\n  fetch(\r\n    appurl_refresh +\r\n      querystring.stringify({\r\n        refresh_token:\r\n          localStorage.getItem(\"refresh_token\") || params.refresh_token\r\n      })\r\n  )\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data);\r\n      function_return(data);\r\n      //setaccess_token(data.access_token);\r\n      //localStorage.setItem(\"access_token\", data.access_token);\r\n    }); //localStorage.removeItem(\"refresh_token\");\r\n}\r\nconst useRecomendation = (nowPlaying, state, genre, musicsaved) => {\r\n  const [recomendation, setrecomendation] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const trace_Recomendation = perf.trace(\"get_Recomendation\");\r\n\r\n    trace_Recomendation.start();\r\n\r\n    const genreSwitch = genre => {\r\n      if (genre) return { seed_genres: genre };\r\n      return {};\r\n    };\r\n    const seed_tracks_fun = () => {\r\n      if (musicsaved) {\r\n        if (musicsaved.length === 0) return {};\r\n        const seed_tracks_ = `${musicsaved.join(\",\")}${\r\n          nowPlaying.id ? \",\" + nowPlaying.id : \"\"\r\n        }`;\r\n        if (seed_tracks_) return { seed_tracks: seed_tracks_ };\r\n      }\r\n\r\n      return {};\r\n    };\r\n\r\n    const valence = state => {\r\n      //if (genreSwitch) return {};\r\n      if (state === 0) return {};\r\n      if (state === 1)\r\n        return {\r\n          min_valence: 0.5\r\n        };\r\n      if (state === 2)\r\n        return {\r\n          max_valence: 0.5\r\n        };\r\n      if (state === 3) return {};\r\n    };\r\n    const finalOptions =\r\n      seed_tracks_fun() || genreSwitch(genre)\r\n        ? {\r\n            ...seed_tracks_fun(),\r\n            ...valence(state),\r\n            ...genreSwitch(genre)\r\n          }\r\n        : {};\r\n    console.log(finalOptions);\r\n\r\n    spotifyApi.getRecommendations(\r\n      {\r\n        limit: 15,\r\n        market: \"PE\",\r\n        //seed_artists: \"4NHQUGzhtTLFvgF5SZesLK\",\r\n        ...finalOptions\r\n        //min_energy: 0.9,\r\n        //popularity: 0.9\r\n      },\r\n      (err, data) => {\r\n        trace_Recomendation.stop();\r\n\r\n        if (!err) setrecomendation(data.tracks);\r\n      }\r\n    );\r\n  }, [state, genre /*, nowPlaying.id */, musicsaved]);\r\n  return [recomendation];\r\n};\r\nconst useCallsaveData = () => {\r\n  const [musicsaved, setmusicsaved] = useState([]);\r\n  useEffect(() => {\r\n    spotifyApi\r\n      .getMySavedTracks({ limit: 4, offset: 0, market: \"PE\" })\r\n      .then(data => {\r\n        /*\r\n        const parsedata = data.items.map(item => {\r\n          return { added_at: item.added_at, ...item.track };\r\n        });*/\r\n        const newdata = data.items.map(item => item.track.id);\r\n        setmusicsaved(newdata);\r\n      });\r\n  }, []);\r\n  return [musicsaved];\r\n};\r\n\r\nconst useGetAudio = nowPlaying => {\r\n  const [audiodetail, setaudiodetail] = useState({});\r\n  useEffect(() => {\r\n    if (nowPlaying.id) {\r\n      spotifyApi\r\n        .getAudioFeaturesForTrack(nowPlaying.id)\r\n        .then(audiodetail => setaudiodetail(audiodetail));\r\n    }\r\n  }, [nowPlaying.id]);\r\n  return [audiodetail];\r\n};\r\nconst useGetPlaylist = () => {\r\n  const [me] = useGetMe();\r\n  const [playlist, setplaylist] = useState([]);\r\n  const [exist, setexist] = useState(0);\r\n  useEffect(() => {\r\n    if (me) {\r\n      spotifyApi.getUserPlaylists(me.id, { limit: 50 }).then(device => {\r\n        setplaylist(device.items);\r\n      });\r\n    }\r\n  }, [me]);\r\n\r\n  useEffect(() => {\r\n    if (playlist.length > 0) {\r\n      var read_cookies = document.cookie;\r\n      var split_read_cookie = read_cookies.split(\";\");\r\n      var parse = split_read_cookie.map(a => {\r\n        let dat = a.split(\"=\");\r\n        return { name: dat[0], data: dat[1] };\r\n      });\r\n      let cock_playlist = parse.find(o => o.name === \" playlist_id\");\r\n\r\n      let obj = playlist.find(o => o.name === \"Domo Playlist\");\r\n      setexist(obj ? 1 : 2);\r\n      if (obj) localStorage.setItem(\"playlist_id\", obj.id);\r\n      if (cock_playlist)\r\n        localStorage.setItem(\"playlist_id\", cock_playlist.data);\r\n      // alert(localStorage.getItem(\"playlist_id\"));\r\n    }\r\n  }, [me.id, playlist]);\r\n  return [exist];\r\n};\r\nconst useCreatePlaylist = () => {\r\n  const [me] = useGetMe();\r\n  //const [exist] = useGetPlaylist();\r\n\r\n  const [playlist_id, setplaylist_id] = useState(null);\r\n  const [playlist, setplaylist] = useState({});\r\n  useEffect(() => {\r\n    if (playlist_id) localStorage.setItem(\"playlist_id\", playlist_id);\r\n  }, [playlist_id]);\r\n  useEffect(() => {\r\n    if (me) {\r\n      getUserData(me, (data, err) => {\r\n        if (data) {\r\n          if (data.playlist_id) {\r\n            spotifyApi.getPlaylist(data.playlist_id).then(dataGet => {\r\n              if (dataGet.id) {\r\n                setplaylist(dataGet);\r\n                setplaylist_id(dataGet.id);\r\n              } else {\r\n                updateData(me, { playlist_id: \"\" }, (body, err) =>\r\n                  console.log(body, err)\r\n                );\r\n              }\r\n            });\r\n          } else\r\n            spotifyApi\r\n              .createPlaylist(me.id, {\r\n                name: \"Domo Playlist\",\r\n                public: false,\r\n                collaborative: false,\r\n                description: \"Playlist de musica recomendada\"\r\n              })\r\n              .then(device => {\r\n                updateData(me, { playlist_id: device.id }, (body, err) =>\r\n                  console.log(body, err)\r\n                );\r\n                setplaylist_id(device.id);\r\n                setplaylist(device);\r\n              });\r\n        }\r\n      });\r\n    }\r\n  }, [me]);\r\n\r\n  /*\r\n  useEffect(() => {\r\n    if (!me.id) return console.log(\"esperando usuario\");\r\n\r\n    if (playlist_id)\r\n      spotifyApi.getPlaylist(playlist_id).then(a => {\r\n        console.log(a);\r\n        setplaylist(a);\r\n        setplaylist_id(a.id);\r\n      });\r\n    else\r\n      spotifyApi\r\n        .createPlaylist(me.id, {\r\n          name: \"Domo Playlist\",\r\n          public: false,\r\n          collaborative: true,\r\n          description: \"Playlist de musica Recomendada\"\r\n        })\r\n        .then(device => {\r\n          localStorage.setItem(\"playlist_id\", device.id);\r\n          setplaylist_id(device);\r\n        });\r\n  }, [me.id]);\r\n*/\r\n  return [playlist];\r\n};\r\nfunction addtoPlaylist(playlist_id, uri) {\r\n  console.log(playlist_id, uri);\r\n  spotifyApi.addTracksToPlaylist(playlist_id, [uri]).then(device => {\r\n    console.log(device);\r\n    spotifyApi.play();\r\n    alert(\"Se añadio con exito\");\r\n  });\r\n}\r\nfunction eliminar() {\r\n  localStorage.removeItem(\"access_token\");\r\n  localStorage.removeItem(\"refresh_token\");\r\n  //localStorage.removeItem(\"playlist_id\");\r\n  // document.cookie = \"playlist_id\" + \"=; Max-Age=0\";\r\n}\r\n\r\n/*\r\n\r\nfunction getAudioFeaturesForTrack(data) {\r\n  const tracks = [];\r\n  data.map(track => {\r\n    spotifyApi.getAudioFeaturesForTrack(track.id, (err, audiodetail) => {\r\n      console.log(Object.assign({}, track, audiodetail));\r\n      tracks.push(Object.assign({}, track, audiodetail));\r\n      return Object.assign({}, track, audiodetail);\r\n    });\r\n  });\r\n  \r\n  if (data.length === tracks.length) return tracks;\r\n  else return data;\r\n}\r\n*/\r\n/*\r\nconst getSearch = () => {\r\n  spotifyApi.search(\"WONDERLAND\", [\"track\"], { market: \"PE\" }).then(device => {\r\n    console.log(device);\r\n  });\r\n};\r\nconst createPlaylist = () => {\r\n  spotifyApi\r\n    .createPlaylist(me.id, {\r\n      name: \"Creado desde el server\",\r\n      public: false,\r\n      description: \"esta lpaylist es la recomendada\"\r\n    })\r\n    .then(device => {\r\n      console.log(device);\r\n    });\r\n};\r\nconst addToPlaylist = () => {\r\n  if (nowPlaying.uri)\r\n    spotifyApi\r\n      .addTracksToPlaylist(\"06sL90oZx5lI8mbaGzlgFD\", [nowPlaying.uri])\r\n      .then(device => {\r\n        console.log(device);\r\n      });\r\n};\r\nconst removeToPlaylist = () => {\r\n  if (nowPlaying.uri)\r\n    spotifyApi\r\n      .removeTracksFromPlaylist(\"06sL90oZx5lI8mbaGzlgFD\", [nowPlaying.uri])\r\n      .then(device => {\r\n        console.log(device);\r\n      });\r\n};\r\n*/\r\n\r\nexport {\r\n  appurl,\r\n  useAccessToken,\r\n  useGetMe,\r\n  useGetNowPlaying,\r\n  useGetDevice,\r\n  useGetAudio,\r\n  useRecomendation,\r\n  addtoPlaylist,\r\n  useGetPlaylist,\r\n  useCreatePlaylist,\r\n  useCallsaveData\r\n  /*,\r\n  getSearch,\r\n  createPlaylist,\r\n  addToPlaylist,\r\n  removeToPlaylist\r\n  */\r\n};\r\n/*\r\n\r\n\r\n*/\r\n","import React from \"react\";\r\nimport \"./card.scss\";\r\nexport default ({ children, normal }) => {\r\n  return <div className={`${normal && \"normal\"} card `}>{children}</div>;\r\n};\r\n","import React from \"react\";\r\nimport {  analytics } from \"../Firebase\";\r\n\r\nimport \"./href.scss\";\r\nexport default ({ children, href, newtab, button, onClick }) => {\r\n  if (button && onClick)\r\n    return (\r\n      <button className=\"button-domo\" onClick={onClick}>\r\n        {children}\r\n      </button>\r\n    );\r\n  return (\r\n    <a href={href} target={newtab ? \"_blank\" : \"_self\"} onClick={()=>analytics.logEvent(\"login\")} className=\"button-domo\">\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/DOMO.554d941c.svg\";","import firebase from \"firebase/app\";\r\n\r\nimport \"firebase/performance\";\r\n//import \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/analytics\";\r\nimport \"firebase/remote-config\";\r\n//import \"firebase/messaging\";\r\n//import \"firebase/storage\";\r\n//const settings = { timestampsInSnapshots: true };\r\nconst devConfig = {\r\n  apiKey: \"AIzaSyALTJda55N9Xs_i-dQ5V5BWyR37cU3CMDA\",\r\n  authDomain: \"domo-music.firebaseapp.com\",\r\n  databaseURL: \"https://domo-music.firebaseio.com\",\r\n  projectId: \"domo-music\",\r\n  storageBucket: \"domo-music.appspot.com\",\r\n  messagingSenderId: \"550634181029\",\r\n  appId: \"1:550634181029:web:5f28c1b8216991d346184c\",\r\n  measurementId: \"G-5S7136XK2T\"\r\n};\r\nconst prodConfig = {\r\n  apiKey: \"AIzaSyALTJda55N9Xs_i-dQ5V5BWyR37cU3CMDA\",\r\n  authDomain: \"domo-music.firebaseapp.com\",\r\n  databaseURL: \"https://domo-music.firebaseio.com\",\r\n  projectId: \"domo-music\",\r\n  storageBucket: \"domo-music.appspot.com\",\r\n  messagingSenderId: \"550634181029\",\r\n  appId: \"1:550634181029:web:5f28c1b8216991d346184c\",\r\n  measurementId: \"G-5S7136XK2T\"\r\n};\r\n\r\nconst config = process.env.NODE_ENV === \"production\" ? prodConfig : devConfig;\r\n\r\nfirebase.initializeApp(config);\r\n//firebase.auth().useDeviceLanguage();\r\n//firebase.auth().settings.appVerificationDisabledForTesting = true;\r\nexport var analytics = firebase.analytics();\r\n\r\nexport var perf = firebase.performance();\r\nconst remoteConfig = firebase.remoteConfig();\r\nremoteConfig.settings = {\r\n  minimumFetchIntervalMillis: 3600000,\r\n  defaultConfig: {\r\n    testeo: true\r\n  }\r\n};\r\nexport { remoteConfig };\r\n\r\n//firebase.firestore().settings(settings);\r\nexport default firebase;\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo.75f61d59.svg\";","import React from 'react'\nimport Domo from \"../files/DOMO.svg\";\nimport Logo from \"../files/Logo.svg\";\nimport Card from \"../components/card\";\nimport Link from \"../components/ahref\";\nimport { appurl } from \"../hooks/data\";\n\nconst imgStyle = {\n    margin: \"20px\"\n  };\nexport default () => {\n  return (\n    <div className=\"App-header\">\n        <Card>\n          <p>\n            <img src={Domo} alt=\"texto\" style={imgStyle}></img>\n          </p>\n          <p>\n            <img src={Logo} alt=\"Logo Domo\" style={imgStyle}></img>\n          </p>\n          <Link href={appurl} style={imgStyle}>\n            Iniciar sesion con spotify\n          </Link>\n        </Card>\n      </div>\n  )\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default props => {\n  var hashParams = {};\n\n  const r = /([^&;=]+)=?([^&;]*)/g;\n  //console.log(props.location.search.substring(1));\n  var e = r.exec(props.location.search.substring(1));\n  console.log(e);\n  while (e) {\n    hashParams[e[1]] = decodeURIComponent(e[2]);\n    e = r.exec(props.location.search.substring(1));\n  }\n  console.log(hashParams);\n  if (hashParams) return <Redirect></Redirect>;\n  return <div>props</div>;\n};\n","import React, { Suspense, lazy, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n/*\nimport Title from \"./components/title\";\n*/\nimport Login from \"./pages/login\";\nimport { useGetNowPlaying, useAccessToken } from \"./hooks/User\";\n\nconst Content = lazy(() => import(\"./pages/content\"));\n\nfunction App() {\n  const loggedIn = useAccessToken();\n  const { error, nowPlaying } = useGetNowPlaying();\n  const [Loginstate, setLoginstate] = useState(false);\n  useEffect(() => {\n    setLoginstate(!loggedIn || error);\n  }, [loggedIn, error]);\n  //const [playlist_id] = useCreatePlaylist();\n\n  /// const [devices] = useGetDevice(nowPlaying);\n  //const [audiodetail] = useGetAudio(nowPlaying);\n\n  //const recomendationPlus = useRecomendationPlus(state);\n\n  /*\n  const recomendacionPlus = recomendationPlus.map((music, indexaudio) => (\n    <List\n      key={music.id}\n      artist={music.artists[0].name}\n      name={music.name}\n      src={music.album.images[0].url}\n      preview_url={music.preview_url}\n      valence={music.valence}\n    />\n  ));\n  console.log(!loggedIn, error);\n  */\n\n  if (!loggedIn || error) {\n    return <Login />;\n  }\n  return (\n    <Suspense fallback={<>Cargando...</>}>\n      <Content nowPlaying={nowPlaying} />\n    </Suspense>\n  );\n}\nexport default App;\n/*\nconst url = 'https://www.spotify.com/logout/'                                                                                                                                                                                                                                                                               \nconst spotifyLogoutWindow = window.open(url, 'Spotify Logout', 'width=700,height=500,top=40,left=40')                                                                                                \nsetTimeout(() => spotifyLogoutWindow.close(), 2000)\n\n  return (\n    <div className=\"App-header\">\n      {nowPlaying.name && loggedIn ? (\n        <Title>Ahora reproduciendo</Title>\n      ) : (\n        <>\n          <Card>\n            <p className=\"Title\">Ponle play para recomendarte</p>\n          </Card>\n        </>\n      )}\n    </div>\n  );\n}\n\n{nowPlaying.name && !current && (\n        <Card normal>\n          <p className=\"Title\">Ponle play para recomendarte</p>\n          <Who\n            name={nowPlaying.name}\n            artist={`${nowPlaying.artist}  ${audiodetail.valence}`}\n          ></Who>\n        </Card>\n      )}\n      {nowPlaying.name && current && (\n        <Card normal>\n          <Who\n            name={nowPlaying.name}\n            artist={`${nowPlaying.artist} ${audiodetail.valence}`}\n          ></Who>\n        </Card>\n      )}\n      {nowPlaying.name && (\n        <Card>\n          <h2>¿Como te quieres sentir ?</h2>\n          <Emoji onClick={() => setState(1)} state={true}></Emoji>\n          <Emoji onClick={() => setState(2)} state={false}></Emoji>\n        </Card>\n      )}\n\n <Card>\n        <Slider min={0} max={1} defaultValue={1} handle={handle} step={0.2} />\n      </Card>\n      <CircularProgressbar\n        value={percentage}\n        className=\"progress\"\n        styles={buildStyles({\n          rotation: 0.25,\n          strokeLinecap: \"round\",\n          pathTransitionDuration: 0.5,\n\n          pathColor: `#F27A54`,\n          trailColor: \"transparent\"\n        })}\n      ></CircularProgressbar>\n\n        {me.display_name && \"hola \" + me.display_name}\n\n        {devices.length > 0 &&\n          \"se encontro \" + devices.length + \" dispositivos\"}\n        {devices.map(device => (\n          <li key={device.id}>\n            {device.name} {device.tylie}\n          </li>\n        ))}\n   <p>acousticness- {audiodetail.acousticness}</p>\n\n            <p>danceability- {audiodetail.danceability}</p>\n            <p>duration_ms- {audiodetail.duration_ms}</p>\n            <p>energy- {audiodetail.energy}</p>\n            <p>instrumentalness- {audiodetail.instrumentalness}</p>\n            <p>key- {audiodetail.key}</p>\n            <p>liveness- {audiodetail.liveness}</p>\n            <p>loudness- {audiodetail.loudness}</p>\n            <p>duration_ms- {audiodetail.duration_ms}</p>\n            <p>mode- {audiodetail.mode}</p>\n            <p>speechiness- {audiodetail.speechiness}</p>\n            <p>tempo- {audiodetail.tempo}</p>\n            <p>time_signature- {audiodetail.time_signature}</p>\n            <p>valence- {audiodetail.valence}</p>\n\n\n     \n      {loggedIn && (\n        <>\n          <button onClick={() => getSearch()}>Search</button>\n          <button onClick={() => createPlaylist()}>createPlaylist</button>\n        </>\n      )}\n      {nowPlaying.uri && (\n        <>\n          <button onClick={() => getRecomendation()}>Get Recomendacion</button>\n          <button onClick={() => getAudio()}>getAudio</button>\n          <button onClick={() => addToPlaylist()}>addToPlaylist</button>\n          <button onClick={() => removeToPlaylist()}>removeToPlaylist</button>\n        </>\n      )}\n     \n      {devices.map(device => (\n        <p key={device.id}>\n          {device.name} {device.type}\n        </p>\n      ))}\n\n*/\n","import React from \"react\";\nimport Login from \"./login\"\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Actualiza el estado para que el siguiente renderizado muestre la interfaz de repuesto\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // También puedes registrar el error en un servicio de reporte de errores\n    console.log(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // Puedes renderizar cualquier interfaz de repuesto\n      return <Login/>;\n    }\n\n    return this.props.children;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"34.68.6.184\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Routes from \"./Routes\";\nimport ErrorBoundary from \"./pages/error\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <ErrorBoundary>\n    <Routes />\n  </ErrorBoundary>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React, { lazy, Suspense, useContext } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Login from \"./pages/login\";\nimport GetToken from \"./pages/getToke\";\nimport App from \"./App\";\n\n//const Content = lazy(() => import(\"./pages/content\"));\n\nexport default () => {\n  console.log(window.location.hash.substring(1));\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/:id\" exact component={GetToken}></Route>\n          <Route path=\"/\" exact>\n            <App />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\nfunction WaitingComponent(Component) {\n  return props => (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Component {...props} />\n    </Suspense>\n  );\n}\n"],"sourceRoot":""}