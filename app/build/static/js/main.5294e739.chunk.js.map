{"version":3,"sources":["components/card.jsx","components/ahref.jsx","components/title.jsx","components/cover.jsx","components/emoji.jsx","components/who.jsx","components/list.jsx","hooks/User.js","App.js","serviceWorker.js","index.js","files/Happy.svg","files/Sad.svg","files/DOMO.svg","files/Logo.svg"],"names":["children","normal","className","href","coverStyle","boxShadow","height","nowPlaying","alt","name","src","albumArt","style","state","onClick","Happy","Sad","WhoStyle","margin","artist","preview_url","controls","preload","spotifyApi","SpotifyWebApi","useAccessToken","params","getHashParams","useState","loggedIn","setloggedIn","useEffect","access_token","setAccessToken","useGetNowPlaying","is_playing","uri","id","setnowPlaying","current","setcurrent","getCurrent","interval","setInterval","getMyCurrentPlaybackState","then","response","item","album","images","url","artists","clearInterval","useRecomendation","recomendation","setrecomendation","error","setError","getRecommendations","limit","market","seed_tracks","min_valence","max_valence","data","tracks","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","appurl","Slider","Handle","urlprod","imgStyle","App","setState","console","log","map","music","indexaudio","key","Domo","Logo","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.5294e739.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.scss\";\r\nexport default ({ children, normal }) => {\r\n  return <div className={`card ${normal && \"normal\"}`}>{children}</div>;\r\n};\r\n","import React from \"react\";\r\nimport \"./href.scss\";\r\nexport default ({ children, href }) => {\r\n  return (\r\n    <a href={href} className=\"button-domo\">\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./title.scss\";\r\nexport default ({ children }) => {\r\n  return <h1>{children}</h1>;\r\n};\r\n","import React from \"react\";\r\nconst coverStyle = {\r\n  boxShadow: \" 7px 7px 9px rgba(0, 0, 0, 0.2)\",\r\n  height: 300\r\n};\r\nexport default ({ nowPlaying }) => {\r\n  return (\r\n    <img alt={nowPlaying.name} src={nowPlaying.albumArt} style={coverStyle} />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Happy from \"../files/Happy.svg\";\r\nimport Sad from \"../files/Sad.svg\";\r\nimport \"./Emoji.scss\";\r\nconst EmojiStyle = {\r\n  margin: \"14px\"\r\n};\r\nexport default ({ state, onClick }) => {\r\n  return (\r\n    <button className=\"buttonStyle\" onClick={onClick}>\r\n      <img\r\n        src={state ? Happy : Sad}\r\n        alt={state ? \"Happy\" : \"Sad\"}\r\n        className=\"EmojiStyle\"\r\n      ></img>\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./who.scss\";\r\nconst WhoStyle = {\r\n  margin: \"10px\"\r\n};\r\nexport default ({ name, artist }) => {\r\n  return (\r\n    <div style={WhoStyle}>\r\n      <h2>{name} </h2>\r\n      <h3>{artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./list.scss\";\r\nexport default ({ artist, name, src, preview_url }) => {\r\n  return (\r\n    <div className=\"list-container\">\r\n      <div>\r\n        <img alt={name} src={src} style={{ height: \"50px\" }} />\r\n      </div>\r\n      <div className=\"list-who\">\r\n        <span className=\"list-name\">{name}</span>\r\n        <span className=\"list-artist\">{artist}</span>\r\n      </div>\r\n      <audio controls={true} src={preview_url} preload=\"none\">\r\n        Your browser does not support the\r\n        <code>audio</code> element.\r\n      </audio>\r\n    </div>\r\n  );\r\n};\r\n/*\r\n  <div>\r\n        <audio controls={true} src={preview_url} preload=\"none\">\r\n          Your browser does not support the\r\n          <code>audio</code> element.\r\n        </audio>\r\n      </div>\r\n\r\n*/\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\n\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\nfunction useAccessToken() {\r\n  const params = getHashParams();\r\n\r\n  const [loggedIn, setloggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (params.access_token) {\r\n      spotifyApi.setAccessToken(params.access_token);\r\n    }\r\n\r\n    setloggedIn(params.access_token ? true : false);\r\n  }, [params.access_token]);\r\n  return loggedIn;\r\n}\r\nconst useGetMe = () => {\r\n  const loggedIn = useAccessToken();\r\n  const [me, setme] = useState({});\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      spotifyApi.getMe().then(user => {\r\n        console.log(user);\r\n        setme(user);\r\n      });\r\n    }\r\n  }, [loggedIn]);\r\n  return [me];\r\n};\r\nconst useGetNowPlaying = loggedIn => {\r\n  const [nowPlaying, setnowPlaying] = useState({\r\n    name: \"\",\r\n    artist: \"\",\r\n    albumArt: \"\",\r\n    is_playing: false,\r\n    uri: \"\",\r\n    id: \"\"\r\n  });\r\n  const [current, setcurrent] = useState(false);\r\n\r\n  useEffect(() => {\r\n    //if (!loggedIn) return null;\r\n    getCurrent();\r\n    const interval = setInterval(() => loggedIn && getCurrent(), 1000);\r\n    function getCurrent() {\r\n      if (loggedIn)\r\n        spotifyApi.getMyCurrentPlaybackState().then(response => {\r\n          setcurrent(response ? response.is_playing : false);\r\n\r\n          if (response)\r\n            setnowPlaying({\r\n              name: response.item.name,\r\n              albumArt: response.item.album.images[0].url,\r\n              is_playing: response.is_playing,\r\n              uri: response.item.uri,\r\n              id: response.item.id,\r\n              artist: response.item.artists[0].name\r\n            });\r\n        });\r\n    }\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [loggedIn]);\r\n\r\n  return [nowPlaying, current];\r\n};\r\n\r\nconst useGetDevice = nowPlaying => {\r\n  const [devices, setdevices] = useState([]);\r\n  useEffect(() => {\r\n    if (nowPlaying.id) {\r\n      spotifyApi.getMyDevices().then(data => setdevices(data.devices));\r\n    }\r\n  }, [nowPlaying.id]);\r\n  return [devices];\r\n};\r\n\r\nconst useRecomendation = (nowPlaying, state) => {\r\n  const [recomendation, setrecomendation] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  useEffect(() => {\r\n    /*window.onerror = function myErrorHandler(errorMsg, url, lineNumber) {\r\n      console.log(\"Error occured: \" + errorMsg); //or any message\r\n      setError(true);\r\n\r\n      return false;\r\n    };\r\n    */\r\n    if (nowPlaying.id) {\r\n      spotifyApi\r\n        .getRecommendations({\r\n          limit: 4,\r\n          market: \"PE\",\r\n          //seed_artists: \"4NHQUGzhtTLFvgF5SZesLK\",\r\n          seed_tracks: nowPlaying.id,\r\n          //min_energy: 0.4,\r\n          min_valence: state ? 0.5 : 0,\r\n          max_valence: state ? 1 : 0.5\r\n          //min_popularity: 90\r\n        })\r\n        .then(data => {\r\n          setError(false);\r\n          setrecomendation(data.tracks);\r\n        });\r\n    }\r\n  }, [nowPlaying.id, state]);\r\n  return [recomendation, error];\r\n};\r\nconst useGetAudio = nowPlaying => {\r\n  const [audiodetail, setaudiodetail] = useState({});\r\n  useEffect(() => {\r\n    if (nowPlaying.id) {\r\n      spotifyApi\r\n        .getAudioFeaturesForTrack(nowPlaying.id)\r\n        .then(audiodetail => setaudiodetail(audiodetail));\r\n    }\r\n  }, [nowPlaying.id]);\r\n  return [audiodetail];\r\n};\r\n/*\r\nconst getSearch = () => {\r\n  spotifyApi.search(\"WONDERLAND\", [\"track\"], { market: \"PE\" }).then(device => {\r\n    console.log(device);\r\n  });\r\n};\r\nconst createPlaylist = () => {\r\n  spotifyApi\r\n    .createPlaylist(me.id, {\r\n      name: \"Creado desde el server\",\r\n      public: false,\r\n      description: \"esta lpaylist es la recomendada\"\r\n    })\r\n    .then(device => {\r\n      console.log(device);\r\n    });\r\n};\r\nconst addToPlaylist = () => {\r\n  if (nowPlaying.uri)\r\n    spotifyApi\r\n      .addTracksToPlaylist(\"06sL90oZx5lI8mbaGzlgFD\", [nowPlaying.uri])\r\n      .then(device => {\r\n        console.log(device);\r\n      });\r\n};\r\nconst removeToPlaylist = () => {\r\n  if (nowPlaying.uri)\r\n    spotifyApi\r\n      .removeTracksFromPlaylist(\"06sL90oZx5lI8mbaGzlgFD\", [nowPlaying.uri])\r\n      .then(device => {\r\n        console.log(device);\r\n      });\r\n};\r\n*/\r\nconst getHashParams = () => {\r\n  var hashParams = {};\r\n  var e,\r\n    r = /([^&;=]+)=?([^&;]*)/g,\r\n    q = window.location.hash.substring(1);\r\n  e = r.exec(q);\r\n  while (e) {\r\n    hashParams[e[1]] = decodeURIComponent(e[2]);\r\n    e = r.exec(q);\r\n  }\r\n  return hashParams;\r\n};\r\nexport {\r\n  useAccessToken,\r\n  useGetMe,\r\n  useGetNowPlaying,\r\n  useGetDevice,\r\n  useRecomendation,\r\n  useGetAudio\r\n  /*,\r\n  getSearch,\r\n  createPlaylist,\r\n  addToPlaylist,\r\n  removeToPlaylist\r\n  */\r\n};\r\n/*\r\n\r\n\r\n*/\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Card from \"./components/card\";\nimport Link from \"./components/ahref\";\nimport Title from \"./components/title\";\nimport Cover from \"./components/cover\";\nimport Emoji from \"./components/emoji\";\nimport Who from \"./components/who\";\nimport List from \"./components/list\";\n\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\n\nimport Domo from \"./files/DOMO.svg\";\nimport Logo from \"./files/Logo.svg\";\n\nimport {\n  useAccessToken,\n  useGetMe,\n  useGetNowPlaying,\n  useGetDevice,\n  useRecomendation,\n  useGetAudio /*\n  ,\n  getRecomendation,\n  getAudio,\n  getSearch,\n  createPlaylist,\n  addToPlaylist,\n  removeToPlaylist*/\n} from \"./hooks/User\";\nimport Slider, { Range } from \"rc-slider\";\nimport Tooltip from \"rc-tooltip\";\n\nimport \"rc-slider/assets/index.css\";\nconst Handle = Slider.Handle;\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\nconst percentage = 50;\nconst urllocal = \"http://34.68.6.184:4001\";\nconst urlprod = \"https://sentimusic.herokuapp.com\";\nlet appurl =\n  process.env.NODE_ENV === \"production\"\n    ? urlprod + \"/login\"\n    : urllocal + \"/login\";\nconst imgStyle = {\n  margin: \"20px\"\n};\nfunction App() {\n  const loggedIn = useAccessToken();\n  //const [me] = useGetMe();\n  const [nowPlaying, current] = useGetNowPlaying(loggedIn);\n  // const [devices] = useGetDevice(nowPlaying);\n  //const [audiodetail] = useGetAudio(nowPlaying);\n  const [state, setState] = useState(true);\n  const [recomendation, error] = useRecomendation(nowPlaying, state);\n  console.log(error);\n  if (!loggedIn)\n    return (\n      <div className=\"App-header\">\n        <Card>\n          <p>\n            <img src={Domo} alt=\"texto\" style={imgStyle}></img>\n          </p>\n          <p>\n            <img src={Logo} alt=\"Logo Domo\" style={imgStyle}></img>\n          </p>\n          <Link href={appurl} style={imgStyle}>\n            Iniciar sesion con spotify\n          </Link>\n        </Card>\n      </div>\n    );\n\n  return (\n    <div className=\"App-header\">\n      {loggedIn && <Title>Ahora reproduciendo</Title>}\n      {nowPlaying.name && !current && (\n        <Card normal>\n          <p className=\"Title\">Ponle play para recomendarte</p>\n          <Who name={nowPlaying.name} artist={nowPlaying.artist}></Who>\n        </Card>\n      )}\n      {nowPlaying.name && current && (\n        <Card normal>\n          <Cover nowPlaying={nowPlaying}></Cover>\n          <Who name={nowPlaying.name} artist={nowPlaying.artist}></Who>\n        </Card>\n      )}\n      <Card>\n        <Emoji onClick={() => setState(true)} state={true}></Emoji>\n        <Emoji onClick={() => setState(false)} state={false}></Emoji>\n      </Card>\n      <Card normal>\n        {recomendation.map((music, indexaudio) => (\n          <List\n            key={music.id}\n            artist={music.artists[0].name}\n            name={music.name}\n            src={music.album.images[0].url}\n            preview_url={music.preview_url}\n          ></List>\n        ))}\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n/*\n <Card>\n        <Slider min={0} max={1} defaultValue={1} handle={handle} step={0.2} />\n      </Card>\n      <CircularProgressbar\n        value={percentage}\n        className=\"progress\"\n        styles={buildStyles({\n          rotation: 0.25,\n          strokeLinecap: \"round\",\n          pathTransitionDuration: 0.5,\n\n          pathColor: `#F27A54`,\n          trailColor: \"transparent\"\n        })}\n      ></CircularProgressbar>\n\n        {me.display_name && \"hola \" + me.display_name}\n\n        {devices.length > 0 &&\n          \"se encontro \" + devices.length + \" dispositivos\"}\n        {devices.map(device => (\n          <li key={device.id}>\n            {device.name} {device.tylie}\n          </li>\n        ))}\n   <p>acousticness- {audiodetail.acousticness}</p>\n\n            <p>danceability- {audiodetail.danceability}</p>\n            <p>duration_ms- {audiodetail.duration_ms}</p>\n            <p>energy- {audiodetail.energy}</p>\n            <p>instrumentalness- {audiodetail.instrumentalness}</p>\n            <p>key- {audiodetail.key}</p>\n            <p>liveness- {audiodetail.liveness}</p>\n            <p>loudness- {audiodetail.loudness}</p>\n            <p>duration_ms- {audiodetail.duration_ms}</p>\n            <p>mode- {audiodetail.mode}</p>\n            <p>speechiness- {audiodetail.speechiness}</p>\n            <p>tempo- {audiodetail.tempo}</p>\n            <p>time_signature- {audiodetail.time_signature}</p>\n            <p>valence- {audiodetail.valence}</p>\n*/\n/*\n\n     \n      {loggedIn && (\n        <>\n          <button onClick={() => getSearch()}>Search</button>\n          <button onClick={() => createPlaylist()}>createPlaylist</button>\n        </>\n      )}\n      {nowPlaying.uri && (\n        <>\n          <button onClick={() => getRecomendation()}>Get Recomendacion</button>\n          <button onClick={() => getAudio()}>getAudio</button>\n          <button onClick={() => addToPlaylist()}>addToPlaylist</button>\n          <button onClick={() => removeToPlaylist()}>removeToPlaylist</button>\n        </>\n      )}\n     \n      {devices.map(device => (\n        <p key={device.id}>\n          {device.name} {device.type}\n        </p>\n      ))}\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Happy.d51ce461.svg\";","module.exports = __webpack_public_path__ + \"static/media/Sad.28aa5087.svg\";","module.exports = __webpack_public_path__ + \"static/media/DOMO.554d941c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logo.75f61d59.svg\";"],"sourceRoot":""}