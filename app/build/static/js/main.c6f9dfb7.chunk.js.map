{"version":3,"sources":["files/Happy.svg","files/Sad.svg","files/Cool.svg","files/DOMO.svg","files/Logo.svg","components/card.jsx","components/ahref.jsx","components/emoji.jsx","components/cover.jsx","components/who.jsx","components/list.jsx","hooks/service.js","hooks/data.js","Firebase.js","services/firebase_service.js","hooks/User.js","pages/recomendation.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","children","normal","className","href","newtab","button","onClick","target","state","src","Happy","Sad","Cool","emoji","alt","coverStyle","boxShadow","height","nowPlaying","is_playing","name","albumArt","style","WhoStyle","margin","artist","preview_url","valence","useState","disabled","setdisabled","controls","preload","getHashParams","SpotifyWebApi","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","urlprod","appurl","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","db","firestore","getUserData","user","returnUser","id","docRef","collection","doc","get","then","exists","data","set","console","log","updateData","functionReturn","merge","catch","error","spotifyApi","useGetMe","me","setme","useEffect","getMe","useGetNowPlaying","uri","setnowPlaying","current","setcurrent","setError","getCurrent","interval","setInterval","getMyCurrentPlaybackState","err","response","clearInterval","localStorage","removeItem","item","currently_playing_type","album","images","url","artists","useRecomendation","recomendation","setrecomendation","useCallsaveData","musicsaved","join","seed_tracks","setseed_tracks","getRecommendations","limit","market","min_valence","max_valence","options","tracks","setmusicsaved","getMySavedTracks","offset","newdata","items","map","track","imgStyle","playlist_id","setplaylist_id","playlist","setplaylist","setItem","getPlaylist","dataGet","body","createPlaylist","public","collaborative","description","device","useCreatePlaylist","titlePlaylist","title","display","gridTemplateColumns","alignItems","external_urls","spotify","music","indexaudio","key","addTracksToPlaylist","play","alert","addtoPlaylist","App","loggedIn","params","setloggedIn","getItem","access_token","refresh_token","setAccessToken","useAccessToken","setState","now","setNow","from","to","add","date","Date","Domo","Logo","textAlign","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6f9dfb7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Happy.d51ce461.svg\";","module.exports = __webpack_public_path__ + \"static/media/Sad.28aa5087.svg\";","module.exports = __webpack_public_path__ + \"static/media/Cool.13d79071.svg\";","module.exports = __webpack_public_path__ + \"static/media/DOMO.554d941c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logo.75f61d59.svg\";","import React from \"react\";\r\nimport \"./card.scss\";\r\nexport default ({ children, normal }) => {\r\n  return <div className={`${normal && \"normal\"} card `}>{children}</div>;\r\n};\r\n","import React from \"react\";\r\nimport \"./href.scss\";\r\nexport default ({ children, href, newtab, button, onClick }) => {\r\n  if (button && onClick)\r\n    return (\r\n      <button className=\"button-domo\" onClick={onClick}>\r\n        {children}\r\n      </button>\r\n    );\r\n  return (\r\n    <a href={href} target={newtab ? \"_blank\" : \"_self\"} className=\"button-domo\">\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Happy from \"../files/Happy.svg\";\r\nimport Sad from \"../files/Sad.svg\";\r\nimport Cool from \"../files/Cool.svg\";\r\nimport \"./Emoji.scss\";\r\n\r\nexport default ({ state, onClick }) => {\r\n  const emoji = state => {\r\n    if (state === 1) return Happy;\r\n    if (state === 2) return Sad;\r\n    if (state === 3) return Cool;\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <button className=\"buttonStyle\" onClick={onClick}>\r\n      <img src={emoji(state)} alt={\"emotion\"} className=\"EmojiStyle\"></img>\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./cover.scss\";\r\n\r\nconst coverStyle = {\r\n  boxShadow: \" 7px 7px 9px rgba(0, 0, 0, 0.2)\",\r\n  height: 250\r\n};\r\nexport default ({ nowPlaying, is_playing }) => {\r\n  return (\r\n    <img\r\n      alt={nowPlaying.name}\r\n      src={nowPlaying.albumArt}\r\n      style={coverStyle}\r\n      className={is_playing ? `coverActive` : `coverDeactivated`}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./who.scss\";\r\nconst WhoStyle = {\r\n  margin: \"10px\"\r\n};\r\nexport default ({ name, artist }) => {\r\n  return (\r\n    <div style={WhoStyle}>\r\n      <h2>{name} </h2>\r\n      <h3>{artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./list.scss\";\r\nexport default ({ artist, name, src, preview_url, valence, onClick }) => {\r\n  const [disabled, setdisabled] = useState(false);\r\n  const click = () => {\r\n    setdisabled(true);\r\n    onClick();\r\n  };\r\n  if (!preview_url) return \"\";\r\n  return (\r\n    <div className=\"list-container\">\r\n      <div>\r\n        <img alt={name} src={src} style={{ height: \"50px\" }} />\r\n      </div>\r\n      <div className=\"list-who\">\r\n        <span className=\"list-name\">{name}</span>\r\n        <span className=\"list-artist\">{artist}</span>\r\n      </div>\r\n      <div className=\"list-valence\">\r\n        <span className=\"valence\">{valence}</span>\r\n      </div>\r\n      <div\r\n        className={`list-audio ${disabled ? \"active-audio\" : \"disabled-audio\"}`}\r\n      >\r\n        <audio controls={true} src={preview_url} preload=\"none\">\r\n          Your browser does not support the\r\n          <code>audio</code> element.\r\n        </audio>\r\n      </div>\r\n      {!disabled && (\r\n        <button disabled={disabled} className=\"add-music\" onClick={click}>\r\n          ADD\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n/*\r\n  <div>\r\n        <audio controls={true} src={preview_url} preload=\"none\">\r\n          Your browser does not support the\r\n          <code>audio</code> element.\r\n        </audio>\r\n      </div>\r\n\r\n*/\r\n","import { useState, useEffect } from \"react\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\nconst getHashParams = () => {\r\n  var hashParams = {};\r\n  var e,\r\n    r = /([^&;=]+)=?([^&;]*)/g,\r\n    q = window.location.hash.substring(1);\r\n  e = r.exec(q);\r\n  while (e) {\r\n    hashParams[e[1]] = decodeURIComponent(e[2]);\r\n    e = r.exec(q);\r\n  }\r\n\r\n  return hashParams;\r\n};\r\nconst useGetDevice = nowPlaying => {\r\n  const [devices, setdevices] = useState([]);\r\n  useEffect(() => {\r\n    if (nowPlaying.id) {\r\n      spotifyApi.getMyDevices().then(data => setdevices(data.devices));\r\n    }\r\n  }, [nowPlaying.id]);\r\n  return [devices];\r\n};\r\n\r\nexport { getHashParams, useGetDevice };\r\n","const urllocal = \"http://34.68.6.184:4001\";\r\nconst urlprod = \"https://sentimusic.herokuapp.com\";\r\n\r\nlet appurl =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? urlprod + \"/login\"\r\n    : urllocal + \"/login\";\r\nlet appurl_refresh =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? urlprod + \"/refresh_token?\"\r\n    : urllocal + \"/refresh_token?\";\r\n\r\nexport { appurl, appurl_refresh };\r\n","import firebase from \"firebase/app\";\r\n\r\n//import \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n//import \"firebase/messaging\";\r\n//import \"firebase/storage\";\r\n//import 'firebase/performance';\r\n//onst settings = { timestampsInSnapshots: true };\r\nconst devConfig = {\r\n  apiKey: \"AIzaSyALTJda55N9Xs_i-dQ5V5BWyR37cU3CMDA\",\r\n  authDomain: \"domo-music.firebaseapp.com\",\r\n  databaseURL: \"https://domo-music.firebaseio.com\",\r\n  projectId: \"domo-music\",\r\n  storageBucket: \"domo-music.appspot.com\",\r\n  messagingSenderId: \"550634181029\",\r\n  appId: \"1:550634181029:web:5f28c1b8216991d346184c\"\r\n};\r\nconst prodConfig = {\r\n  apiKey: \"AIzaSyALTJda55N9Xs_i-dQ5V5BWyR37cU3CMDA\",\r\n  authDomain: \"domo-music.firebaseapp.com\",\r\n  databaseURL: \"https://domo-music.firebaseio.com\",\r\n  projectId: \"domo-music\",\r\n  storageBucket: \"domo-music.appspot.com\",\r\n  messagingSenderId: \"550634181029\",\r\n  appId: \"1:550634181029:web:5f28c1b8216991d346184c\"\r\n};\r\n\r\nconst config = process.env.NODE_ENV === \"production\" ? prodConfig : devConfig;\r\n\r\nfirebase.initializeApp(config);\r\n//firebase.auth().useDeviceLanguage();\r\n//firebase.auth().settings.appVerificationDisabledForTesting = true;\r\n\r\n//export var perf = firebase.performance();\r\n\r\n//firebase.firestore().settings(settings);\r\nexport default firebase;\r\n","import firebase from \"../Firebase\";\r\nconst db = firebase.firestore();\r\nfunction getUserData(user, returnUser) {\r\n  if (user.id) {\r\n    var docRef = db.collection(\"users\").doc(user.id);\r\n    docRef.get().then(function(doc) {\r\n      if (doc.exists) {\r\n        returnUser(doc.data());\r\n      } else {\r\n        docRef.set({\r\n          ...user\r\n        });\r\n        // doc.data() will be undefined in this case\r\n        console.log(\"No such document!\");\r\n        returnUser(user, \"No such document!\");\r\n      }\r\n    });\r\n  } else {\r\n    returnUser(null, \"Not receive user\");\r\n  }\r\n}\r\nfunction updateData(user, data, functionReturn) {\r\n  if (user) {\r\n    console.log(user);\r\n\r\n    var docRef = db.collection(\"users\").doc(user.id);\r\n    docRef\r\n      .set(data, { merge: true })\r\n      .then(() => {\r\n        functionReturn(data);\r\n      })\r\n      .catch(function(error) {\r\n        functionReturn(null, error);\r\n      });\r\n  } else {\r\n    functionReturn(null, \"No such user!\");\r\n  }\r\n}\r\nfunction PostAccion(user, accion) {\r\n  firebase\r\n    .firestore()\r\n    .collection(\"actions\")\r\n    .add({\r\n      user,\r\n      accion,\r\n      date: new Date()\r\n    });\r\n}\r\nfunction PostTransition(user, from, to) {\r\n  firebase\r\n    .firestore()\r\n    .collection(\"transition\")\r\n    .add({\r\n      user: user.id,\r\n      from,\r\n      to,\r\n      date: new Date()\r\n    });\r\n}\r\nexport { getUserData, updateData, PostAccion, PostTransition };\r\n","import { useState, useEffect } from \"react\";\r\nimport { getHashParams, useGetDevice } from \"./service\";\r\nimport { appurl /*, appurl_refresh */ } from \"./data\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\nimport { getUserData, updateData } from \"../services/firebase_service\";\r\n//var querystring = require(\"querystring\");\r\n\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\nfunction useAccessToken() {\r\n  const params = getHashParams();\r\n  const [loggedIn, setloggedIn] = useState(false);\r\n  const [access_token /*, setaccess_token*/] = useState(\r\n    localStorage.getItem(\"access_token\") || params.access_token || \"\"\r\n  );\r\n  const [refresh_token /*, setRefresh_token*/] = useState(\r\n    localStorage.getItem(\"refresh_token\") || params.refresh_token || \"\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    /*\r\n    if (access_token) getAccessToken(access_token, data => console.log(data));\r\n    if (refresh_token)\r\n      fetch(\r\n        appurl_refresh +\r\n          querystring.stringify({\r\n            refresh_token\r\n          })\r\n      )\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          //console.log(data);\r\n          setaccess_token(data.access_token);\r\n          localStorage.setItem(\"access_token\", data.access_token);\r\n        }); //localStorage.removeItem(\"refresh_token\");\r\n        */\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (access_token) {\r\n      spotifyApi.setAccessToken(access_token);\r\n      localStorage.setItem(\"access_token\", access_token);\r\n      localStorage.setItem(\"refresh_token\", refresh_token);\r\n    }\r\n    setloggedIn(access_token ? true : false);\r\n  }, [access_token, refresh_token]);\r\n  return loggedIn;\r\n}\r\nconst useGetMe = () => {\r\n  const [me, setme] = useState({});\r\n  useEffect(() => {\r\n    spotifyApi.getMe().then(user => {\r\n      setme(user);\r\n    });\r\n  }, []);\r\n  return [me];\r\n};\r\nconst useGetNowPlaying = () => {\r\n  const [nowPlaying, setnowPlaying] = useState({\r\n    name: \"\",\r\n    artist: \"\",\r\n    albumArt: \"\",\r\n    is_playing: false,\r\n    uri: \"\",\r\n    id: \"\"\r\n  });\r\n  const [current, setcurrent] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrent();\r\n    const interval = setInterval(() => getCurrent(), 3000);\r\n    function getCurrent() {\r\n      spotifyApi.getMyCurrentPlaybackState((err, response) => {\r\n        if (err) {\r\n          setError(true);\r\n          clearInterval(interval);\r\n          eliminar();\r\n          console.error(err);\r\n        } else {\r\n          setError(false);\r\n          setcurrent(response ? response.is_playing : false);\r\n\r\n          if (response.item && response.currently_playing_type !== \"episode\") {\r\n            setnowPlaying({\r\n              name: response.item.name,\r\n              albumArt: response.item.album.images[0].url,\r\n              is_playing: response.is_playing,\r\n              uri: response.item.uri,\r\n              id: response.item.id,\r\n              artist: response.item.artists[0].name\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return [nowPlaying, error, current];\r\n};\r\n\r\nconst useRecomendation = (nowPlaying, state) => {\r\n  const [recomendation, setrecomendation] = useState([]);\r\n  const [musicsaved] = useCallsaveData();\r\n  const [seed_tracks, setseed_tracks] = useState(\r\n    `${musicsaved.join(\",\")}${nowPlaying.id ? \",\" + nowPlaying.id : \"\"}`\r\n  );\r\n  useEffect(() => {\r\n    setseed_tracks(\r\n      `${musicsaved.join(\",\")}${nowPlaying.id ? \",\" + nowPlaying.id : \"\"}`\r\n    );\r\n  }, [nowPlaying, musicsaved]);\r\n  useEffect(() => {\r\n    const options = state => {\r\n      if (state === 0)\r\n        return {\r\n          min_valence: 0,\r\n          max_valence: 1\r\n        };\r\n      if (state === 1)\r\n        return {\r\n          min_valence: 0.5,\r\n          max_valence: 1\r\n        };\r\n      if (state === 2)\r\n        return {\r\n          min_valence: 0,\r\n          max_valence: 0.5\r\n        };\r\n      if (state === 3)\r\n        return {\r\n          min_valence: 0,\r\n          max_valence: 1\r\n        };\r\n    };\r\n\r\n    if (seed_tracks /* && state !== 0*/) {\r\n      spotifyApi\r\n        .getRecommendations({\r\n          limit: 15,\r\n          market: \"PE\",\r\n          //seed_artists: \"4NHQUGzhtTLFvgF5SZesLK\",\r\n          seed_tracks,\r\n          ...options(state)\r\n          //min_energy: 0.9,\r\n          //popularity: 0.9\r\n        })\r\n        .then(data => {\r\n          setrecomendation(data.tracks);\r\n        });\r\n    }\r\n  }, [state, seed_tracks /*, nowPlaying.id*/]);\r\n  return [recomendation];\r\n};\r\nconst useCallsaveData = () => {\r\n  const [musicsaved, setmusicsaved] = useState([]);\r\n  useEffect(() => {\r\n    spotifyApi\r\n      .getMySavedTracks({ limit: 4, offset: 0, market: \"PE\" })\r\n      .then(data => {\r\n        /*\r\n        const parsedata = data.items.map(item => {\r\n          return { added_at: item.added_at, ...item.track };\r\n        });*/\r\n        const newdata = data.items.map(item => item.track.id);\r\n        setmusicsaved(newdata);\r\n      });\r\n  }, []);\r\n  return [musicsaved];\r\n};\r\n\r\nconst useGetAudio = nowPlaying => {\r\n  const [audiodetail, setaudiodetail] = useState({});\r\n  useEffect(() => {\r\n    if (nowPlaying.id) {\r\n      spotifyApi\r\n        .getAudioFeaturesForTrack(nowPlaying.id)\r\n        .then(audiodetail => setaudiodetail(audiodetail));\r\n    }\r\n  }, [nowPlaying.id]);\r\n  return [audiodetail];\r\n};\r\nconst useGetPlaylist = () => {\r\n  const [me] = useGetMe();\r\n  const [playlist, setplaylist] = useState([]);\r\n  const [exist, setexist] = useState(0);\r\n  useEffect(() => {\r\n    if (me) {\r\n      spotifyApi.getUserPlaylists(me.id, { limit: 50 }).then(device => {\r\n        setplaylist(device.items);\r\n      });\r\n    }\r\n  }, [me]);\r\n\r\n  useEffect(() => {\r\n    if (playlist.length > 0) {\r\n      var read_cookies = document.cookie;\r\n      var split_read_cookie = read_cookies.split(\";\");\r\n      var parse = split_read_cookie.map(a => {\r\n        let dat = a.split(\"=\");\r\n        return { name: dat[0], data: dat[1] };\r\n      });\r\n      let cock_playlist = parse.find(o => o.name === \" playlist_id\");\r\n\r\n      let obj = playlist.find(o => o.name === \"Domo Playlist\");\r\n      setexist(obj ? 1 : 2);\r\n      if (obj) localStorage.setItem(\"playlist_id\", obj.id);\r\n      if (cock_playlist)\r\n        localStorage.setItem(\"playlist_id\", cock_playlist.data);\r\n      // alert(localStorage.getItem(\"playlist_id\"));\r\n    }\r\n  }, [me.id, playlist]);\r\n  return [exist];\r\n};\r\nconst useCreatePlaylist = () => {\r\n  const [me] = useGetMe();\r\n  //const [exist] = useGetPlaylist();\r\n\r\n  const [playlist_id, setplaylist_id] = useState(null);\r\n  const [playlist, setplaylist] = useState({});\r\n  useEffect(() => {\r\n    if (playlist_id) localStorage.setItem(\"playlist_id\", playlist_id);\r\n  }, [playlist_id]);\r\n  useEffect(() => {\r\n    if (me) {\r\n      getUserData(me, (data, err) => {\r\n        if (data) {\r\n          if (data.playlist_id) {\r\n            spotifyApi.getPlaylist(data.playlist_id).then(dataGet => {\r\n              if (dataGet.id) {\r\n                setplaylist(dataGet);\r\n                setplaylist_id(dataGet.id);\r\n              } else {\r\n                updateData(me, { playlist_id: \"\" }, (body, err) =>\r\n                  console.log(body, err)\r\n                );\r\n              }\r\n            });\r\n          } else\r\n            spotifyApi\r\n              .createPlaylist(me.id, {\r\n                name: \"Domo Playlist\",\r\n                public: false,\r\n                collaborative: false,\r\n                description: \"Playlist de musica recomendada\"\r\n              })\r\n              .then(device => {\r\n                updateData(me, { playlist_id: device.id }, (body, err) =>\r\n                  console.log(body, err)\r\n                );\r\n                setplaylist_id(device.id);\r\n                setplaylist(device);\r\n              });\r\n        }\r\n      });\r\n    }\r\n  }, [me]);\r\n\r\n  /*\r\n  useEffect(() => {\r\n    if (!me.id) return console.log(\"esperando usuario\");\r\n\r\n    if (playlist_id)\r\n      spotifyApi.getPlaylist(playlist_id).then(a => {\r\n        console.log(a);\r\n        setplaylist(a);\r\n        setplaylist_id(a.id);\r\n      });\r\n    else\r\n      spotifyApi\r\n        .createPlaylist(me.id, {\r\n          name: \"Domo Playlist\",\r\n          public: false,\r\n          collaborative: true,\r\n          description: \"Playlist de musica Recomendada\"\r\n        })\r\n        .then(device => {\r\n          localStorage.setItem(\"playlist_id\", device.id);\r\n          setplaylist_id(device);\r\n        });\r\n  }, [me.id]);\r\n*/\r\n  return [playlist];\r\n};\r\nfunction addtoPlaylist(playlist_id, uri) {\r\n  console.log(playlist_id, uri);\r\n  spotifyApi.addTracksToPlaylist(playlist_id, [uri]).then(device => {\r\n    console.log(device);\r\n    spotifyApi.play();\r\n    alert(\"Se añadio con exito\");\r\n  });\r\n}\r\nfunction eliminar() {\r\n  localStorage.removeItem(\"access_token\");\r\n  localStorage.removeItem(\"refresh_token\");\r\n  //localStorage.removeItem(\"playlist_id\");\r\n  // document.cookie = \"playlist_id\" + \"=; Max-Age=0\";\r\n}\r\n/*\r\n\r\nfunction getAudioFeaturesForTrack(data) {\r\n  const tracks = [];\r\n  data.map(track => {\r\n    spotifyApi.getAudioFeaturesForTrack(track.id, (err, audiodetail) => {\r\n      console.log(Object.assign({}, track, audiodetail));\r\n      tracks.push(Object.assign({}, track, audiodetail));\r\n      return Object.assign({}, track, audiodetail);\r\n    });\r\n  });\r\n  \r\n  if (data.length === tracks.length) return tracks;\r\n  else return data;\r\n}\r\n*/\r\n/*\r\nconst getSearch = () => {\r\n  spotifyApi.search(\"WONDERLAND\", [\"track\"], { market: \"PE\" }).then(device => {\r\n    console.log(device);\r\n  });\r\n};\r\nconst createPlaylist = () => {\r\n  spotifyApi\r\n    .createPlaylist(me.id, {\r\n      name: \"Creado desde el server\",\r\n      public: false,\r\n      description: \"esta lpaylist es la recomendada\"\r\n    })\r\n    .then(device => {\r\n      console.log(device);\r\n    });\r\n};\r\nconst addToPlaylist = () => {\r\n  if (nowPlaying.uri)\r\n    spotifyApi\r\n      .addTracksToPlaylist(\"06sL90oZx5lI8mbaGzlgFD\", [nowPlaying.uri])\r\n      .then(device => {\r\n        console.log(device);\r\n      });\r\n};\r\nconst removeToPlaylist = () => {\r\n  if (nowPlaying.uri)\r\n    spotifyApi\r\n      .removeTracksFromPlaylist(\"06sL90oZx5lI8mbaGzlgFD\", [nowPlaying.uri])\r\n      .then(device => {\r\n        console.log(device);\r\n      });\r\n};\r\n*/\r\n\r\nexport {\r\n  appurl,\r\n  useAccessToken,\r\n  useGetMe,\r\n  useGetNowPlaying,\r\n  useGetDevice,\r\n  useGetAudio,\r\n  useRecomendation,\r\n  addtoPlaylist,\r\n  useGetPlaylist,\r\n  useCreatePlaylist\r\n  /*,\r\n  getSearch,\r\n  createPlaylist,\r\n  addToPlaylist,\r\n  removeToPlaylist\r\n  */\r\n};\r\n/*\r\n\r\n\r\n*/\r\n","import React from \"react\";\r\nimport Card from \"../components/card\";\r\nimport List from \"../components/list\";\r\nimport Link from \"../components/ahref\";\r\nimport {\r\n  useRecomendation,\r\n  addtoPlaylist,\r\n  useCreatePlaylist\r\n} from \"../hooks/User\";\r\nconst imgStyle = {\r\n  margin: \"20px\"\r\n};\r\nexport default ({ nowPlaying, state }) => {\r\n  const [playlist_id] = useCreatePlaylist();\r\n\r\n  const [recomendation] = useRecomendation(nowPlaying, state);\r\n  const title = state => {\r\n    if (state === 0) return \"Playlist automatica\";\r\n    if (state === 1) return \"Playlist Feliz\";\r\n    if (state === 2) return \"Modo Sad\";\r\n    if (state === 3) return \"Modo Cool\";\r\n    return \"Me buggie\";\r\n  };\r\n\r\n  const titlePlaylist = <h2>{title(state)}</h2>;\r\n  return (\r\n    <Card normal>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"auto 40%\",\r\n          alignItems: \"center\"\r\n        }}\r\n      >\r\n        {titlePlaylist}\r\n        {playlist_id.external_urls && (\r\n          <Link href={playlist_id.external_urls.spotify} style={imgStyle}>\r\n            Ir a la playlist creada\r\n          </Link>\r\n        )}\r\n      </div>\r\n      {recomendation.map((music, indexaudio) => (\r\n        <div key={indexaudio}>\r\n          {music.album.images[0].url && (\r\n            <List\r\n              key={music.id}\r\n              artist={music.artists[0].name}\r\n              name={music.name}\r\n              src={music.album.images ? music.album.images[0].url : \"\"}\r\n              preview_url={music.preview_url}\r\n              valence={music.valence}\r\n              onClick={() => addtoPlaylist(playlist_id.id, music.uri)}\r\n            />\r\n          )}\r\n        </div>\r\n      ))}\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Card from \"./components/card\";\nimport Link from \"./components/ahref\";\nimport Emoji from \"./components/emoji\";\n/*\nimport Title from \"./components/title\";\n*/\nimport Cover from \"./components/cover\";\nimport Who from \"./components/who\";\nimport Domo from \"./files/DOMO.svg\";\nimport Logo from \"./files/Logo.svg\";\nimport Recomendation from \"./pages/recomendation\";\nimport {\n  appurl,\n  useGetNowPlaying,\n  useAccessToken,\n  useGetMe\n} from \"./hooks/User\";\nimport { PostTransition } from \"./services/firebase_service\";\n\nconst imgStyle = {\n  margin: \"20px\"\n};\nfunction App() {\n  //const [playlist_id] = useCreatePlaylist();\n\n  const loggedIn = useAccessToken();\n  const [state, setState] = useState(0);\n  const [now, setNow] = useState(null);\n  const [nowPlaying, error] = useGetNowPlaying();\n  const [me] = useGetMe();\n\n  useEffect(() => {\n    if (!now || state === 0) {\n      console.log(!now || state === 0);\n    } else if (me) {\n      PostTransition(me, now, state);\n      console.log(me);\n    }\n  }, [now, state, me]);\n\n  /// const [devices] = useGetDevice(nowPlaying);\n  //const [audiodetail] = useGetAudio(nowPlaying);\n\n  //const recomendationPlus = useRecomendationPlus(state);\n\n  /*\n  const recomendacionPlus = recomendationPlus.map((music, indexaudio) => (\n    <List\n      key={music.id}\n      artist={music.artists[0].name}\n      name={music.name}\n      src={music.album.images[0].url}\n      preview_url={music.preview_url}\n      valence={music.valence}\n    />\n  ));\n  console.log(!loggedIn, error);\n  */\n\n  if (!loggedIn || error) {\n    return (\n      <div className=\"App-header\">\n        <Card>\n          <p>\n            <img src={Domo} alt=\"texto\" style={imgStyle}></img>\n          </p>\n          <p>\n            <img src={Logo} alt=\"Logo Domo\" style={imgStyle}></img>\n          </p>\n          <Link href={appurl} style={imgStyle}>\n            Iniciar sesion con spotify\n          </Link>\n        </Card>\n      </div>\n    );\n  }\n  return (\n    <div className=\"App-header\">\n      {nowPlaying.name && (\n        <Card normal>\n          <h3 style={{ textAlign: \"left\" }}>Ahora reproduciendo:</h3>\n          <Cover\n            is_playing={nowPlaying.is_playing}\n            nowPlaying={nowPlaying}\n          ></Cover>\n\n          <Who name={nowPlaying.name} artist={`${nowPlaying.artist} `}></Who>\n        </Card>\n      )}\n      <Card normal={!now}>\n        {state !== 0 && (\n          <Link\n            button\n            onClick={() => {\n              setNow(null);\n              setState(0);\n            }}\n          >\n            Volver a escoger\n          </Link>\n        )}\n\n        {!now ? (\n          <>\n            <h2>¿Como te sientes ahora?</h2>\n            <Emoji onClick={() => setNow(1)} state={1}></Emoji>\n            <Emoji onClick={() => setNow(3)} state={3}></Emoji>\n            <Emoji onClick={() => setNow(2)} state={2}></Emoji>\n          </>\n        ) : (\n          state === 0 && (\n            <>\n              <h2>¿Como te quieres sentir ?</h2>\n              <Emoji onClick={() => setState(1)} state={1}></Emoji>\n              <Emoji onClick={() => setState(3)} state={3}></Emoji>\n              <Emoji onClick={() => setState(2)} state={2}></Emoji>\n            </>\n          )\n        )}\n      </Card>\n      {now && state !== 0 && (\n        <Recomendation nowPlaying={nowPlaying} state={state} />\n      )}\n    </div>\n  );\n}\n/*\n  return (\n    <div className=\"App-header\">\n      {nowPlaying.name && loggedIn ? (\n        <Title>Ahora reproduciendo</Title>\n      ) : (\n        <>\n          <Card>\n            <p className=\"Title\">Ponle play para recomendarte</p>\n          </Card>\n        </>\n      )}\n    </div>\n  );\n}\n*/\nexport default App;\n/*\n{nowPlaying.name && !current && (\n        <Card normal>\n          <p className=\"Title\">Ponle play para recomendarte</p>\n          <Who\n            name={nowPlaying.name}\n            artist={`${nowPlaying.artist}  ${audiodetail.valence}`}\n          ></Who>\n        </Card>\n      )}\n      {nowPlaying.name && current && (\n        <Card normal>\n          <Who\n            name={nowPlaying.name}\n            artist={`${nowPlaying.artist} ${audiodetail.valence}`}\n          ></Who>\n        </Card>\n      )}\n      {nowPlaying.name && (\n        <Card>\n          <h2>¿Como te quieres sentir ?</h2>\n          <Emoji onClick={() => setState(1)} state={true}></Emoji>\n          <Emoji onClick={() => setState(2)} state={false}></Emoji>\n        </Card>\n      )}\n*/\n/*\n <Card>\n        <Slider min={0} max={1} defaultValue={1} handle={handle} step={0.2} />\n      </Card>\n      <CircularProgressbar\n        value={percentage}\n        className=\"progress\"\n        styles={buildStyles({\n          rotation: 0.25,\n          strokeLinecap: \"round\",\n          pathTransitionDuration: 0.5,\n\n          pathColor: `#F27A54`,\n          trailColor: \"transparent\"\n        })}\n      ></CircularProgressbar>\n\n        {me.display_name && \"hola \" + me.display_name}\n\n        {devices.length > 0 &&\n          \"se encontro \" + devices.length + \" dispositivos\"}\n        {devices.map(device => (\n          <li key={device.id}>\n            {device.name} {device.tylie}\n          </li>\n        ))}\n   <p>acousticness- {audiodetail.acousticness}</p>\n\n            <p>danceability- {audiodetail.danceability}</p>\n            <p>duration_ms- {audiodetail.duration_ms}</p>\n            <p>energy- {audiodetail.energy}</p>\n            <p>instrumentalness- {audiodetail.instrumentalness}</p>\n            <p>key- {audiodetail.key}</p>\n            <p>liveness- {audiodetail.liveness}</p>\n            <p>loudness- {audiodetail.loudness}</p>\n            <p>duration_ms- {audiodetail.duration_ms}</p>\n            <p>mode- {audiodetail.mode}</p>\n            <p>speechiness- {audiodetail.speechiness}</p>\n            <p>tempo- {audiodetail.tempo}</p>\n            <p>time_signature- {audiodetail.time_signature}</p>\n            <p>valence- {audiodetail.valence}</p>\n\n\n     \n      {loggedIn && (\n        <>\n          <button onClick={() => getSearch()}>Search</button>\n          <button onClick={() => createPlaylist()}>createPlaylist</button>\n        </>\n      )}\n      {nowPlaying.uri && (\n        <>\n          <button onClick={() => getRecomendation()}>Get Recomendacion</button>\n          <button onClick={() => getAudio()}>getAudio</button>\n          <button onClick={() => addToPlaylist()}>addToPlaylist</button>\n          <button onClick={() => removeToPlaylist()}>removeToPlaylist</button>\n        </>\n      )}\n     \n      {devices.map(device => (\n        <p key={device.id}>\n          {device.name} {device.type}\n        </p>\n      ))}\n\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"34.68.6.184\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}