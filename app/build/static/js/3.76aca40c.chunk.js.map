{"version":3,"sources":["files/Happy.svg","files/Sad.svg","files/Cool.svg","components/emoji.jsx","components/cover.jsx","components/who.jsx","pages/content.jsx"],"names":["module","exports","state","onClick","className","src","Happy","Sad","Cool","emoji","alt","coverStyle","boxShadow","height","nowPlaying","is_playing","name","albumArt","style","WhoStyle","margin","artist","Recomendation","lazy","useState","setState","now","setNow","useGetNowPlaying","useGetMe","me","useEffect","PostTransition","normal","textAlign","button","fallback"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,kMCM5B,G,MAAA,YAAyB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAQvB,OACE,4BAAQC,UAAU,cAAcD,QAASA,GACvC,yBAAKE,IATK,SAAAH,GACZ,OAAc,IAAVA,EAAoBI,IACV,IAAVJ,EAAoBK,IACV,IAAVL,EAAoBM,IACjB,KAKKC,CAAMP,GAAQQ,IAAK,UAAWN,UAAU,kB,eCblDO,G,MAAa,CACjBC,UAAW,kCACXC,OAAQ,MAEK,cAAiC,IAA9BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAC5B,OACE,yBACEL,IAAKI,EAAWE,KAChBX,IAAKS,EAAWG,SAChBC,MAAOP,EACPP,UAAWW,EAAU,oCCXrBI,G,MAAW,CACfC,OAAQ,SAEK,cAAuB,IAApBJ,EAAmB,EAAnBA,KAAMK,EAAa,EAAbA,OACtB,OACE,yBAAKH,MAAOC,GACV,4BAAKH,EAAL,KACA,4BAAKK,KCDLC,EAAgBC,eAAK,kBAAM,+BAElB,qBAAO,IAAD,EACOC,mBAAS,GADhB,mBACZtB,EADY,KACLuB,EADK,OAEGD,mBAAS,MAFZ,mBAEZE,EAFY,KAEPC,EAFO,KAGXb,EAAec,cAAfd,WAHW,EAINe,cAANC,EAJY,oBAcnB,OARAC,oBAAU,WACHL,GAAiB,IAAVxB,GAED4B,GACTE,YAAeF,EAAIJ,EAAKxB,IAGzB,CAACwB,EAAKxB,EAAO4B,IAEd,yBAAK1B,UAAU,cACZU,EAAWE,MACV,kBAAC,IAAD,CAAMiB,QAAM,GACV,wBAAIf,MAAO,CAAEgB,UAAW,SAAxB,wBACA,kBAAC,EAAD,CACEnB,WAAYD,EAAWC,WACvBD,WAAYA,IAGd,kBAAC,EAAD,CAAKE,KAAMF,EAAWE,KAAMK,OAAM,UAAKP,EAAWO,OAAhB,QAGtC,kBAAC,IAAD,CAAMY,QAASP,GACF,IAAVxB,GACC,kBAAC,IAAD,CACEiC,QAAM,EACNhC,QAAS,WACPwB,EAAO,MACPF,EAAS,KAJb,oBAWAC,EAQU,IAAVxB,GACE,oCACE,4DACA,kBAAC,EAAD,CAAOC,QAAS,kBAAMsB,EAAS,IAAIvB,MAAO,IAC1C,kBAAC,EAAD,CAAOC,QAAS,kBAAMsB,EAAS,IAAIvB,MAAO,IAC1C,kBAAC,EAAD,CAAOC,QAAS,kBAAMsB,EAAS,IAAIvB,MAAO,KAZ9C,oCACE,0DACA,kBAAC,EAAD,CAAOC,QAAS,kBAAMwB,EAAO,IAAIzB,MAAO,IAExC,kBAAC,EAAD,CAAOC,QAAS,kBAAMwB,EAAO,IAAIzB,MAAO,MAc7CwB,GAAiB,IAAVxB,GACN,kBAAC,WAAD,CAAUkC,SAAU,sCAClB,kBAACd,EAAD,CAAeR,WAAYA,EAAYZ,MAAOA","file":"static/js/3.76aca40c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Happy.d51ce461.svg\";","module.exports = __webpack_public_path__ + \"static/media/Sad.28aa5087.svg\";","module.exports = __webpack_public_path__ + \"static/media/Cool.13d79071.svg\";","import React from \"react\";\r\nimport Happy from \"../files/Happy.svg\";\r\nimport Sad from \"../files/Sad.svg\";\r\nimport Cool from \"../files/Cool.svg\";\r\nimport \"./Emoji.scss\";\r\n\r\nexport default ({ state, onClick }) => {\r\n  const emoji = state => {\r\n    if (state === 1) return Happy;\r\n    if (state === 2) return Sad;\r\n    if (state === 3) return Cool;\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <button className=\"buttonStyle\" onClick={onClick}>\r\n      <img src={emoji(state)} alt={\"emotion\"} className=\"EmojiStyle\"></img>\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./cover.scss\";\r\n\r\nconst coverStyle = {\r\n  boxShadow: \" 7px 7px 9px rgba(0, 0, 0, 0.2)\",\r\n  height: 250\r\n};\r\nexport default ({ nowPlaying, is_playing }) => {\r\n  return (\r\n    <img\r\n      alt={nowPlaying.name}\r\n      src={nowPlaying.albumArt}\r\n      style={coverStyle}\r\n      className={is_playing ? `coverActive` : `coverDeactivated`}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./who.scss\";\r\nconst WhoStyle = {\r\n  margin: \"10px\"\r\n};\r\nexport default ({ name, artist }) => {\r\n  return (\r\n    <div style={WhoStyle}>\r\n      <h2>{name} </h2>\r\n      <h3>{artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, Suspense, lazy } from \"react\";\r\nimport { useGetNowPlaying, useGetMe } from \"../hooks/User\";\r\nimport { PostTransition } from \"../services/firebase_service\";\r\nimport Emoji from \"../components/emoji\";\r\nimport Card from \"../components/card\";\r\nimport Link from \"../components/ahref\";\r\nimport Cover from \"../components/cover\";\r\nimport Who from \"../components/who\";\r\nconst Recomendation = lazy(() => import(\"./recomendation\"));\r\n\r\nexport default () => {\r\n  const [state, setState] = useState(0);\r\n  const [now, setNow] = useState(null);\r\n  const { nowPlaying } = useGetNowPlaying();\r\n  const [me] = useGetMe();\r\n\r\n  useEffect(() => {\r\n    if (!now || state === 0) {\r\n      //console.log(!now || state === 0);\r\n    } else if (me) {\r\n      PostTransition(me, now, state);\r\n      //console.log(me);\r\n    }\r\n  }, [now, state, me]);\r\n  return (\r\n    <div className=\"App-header\">\r\n      {nowPlaying.name && (\r\n        <Card normal>\r\n          <h3 style={{ textAlign: \"left\" }}>Ahora reproduciendo:</h3>\r\n          <Cover\r\n            is_playing={nowPlaying.is_playing}\r\n            nowPlaying={nowPlaying}\r\n          ></Cover>\r\n\r\n          <Who name={nowPlaying.name} artist={`${nowPlaying.artist} `}></Who>\r\n        </Card>\r\n      )}\r\n      <Card normal={!now}>\r\n        {state !== 0 && (\r\n          <Link\r\n            button\r\n            onClick={() => {\r\n              setNow(null);\r\n              setState(0);\r\n            }}\r\n          >\r\n            Volver a escoger\r\n          </Link>\r\n        )}\r\n\r\n        {!now ? (\r\n          <>\r\n            <h2>¿Como te sientes ahora?</h2>\r\n            <Emoji onClick={() => setNow(1)} state={1}></Emoji>\r\n\r\n            <Emoji onClick={() => setNow(2)} state={2}></Emoji>\r\n          </>\r\n        ) : (\r\n          state === 0 && (\r\n            <>\r\n              <h2>¿Como te quieres sentir ?</h2>\r\n              <Emoji onClick={() => setState(1)} state={1}></Emoji>\r\n              <Emoji onClick={() => setState(3)} state={3}></Emoji>\r\n              <Emoji onClick={() => setState(2)} state={2}></Emoji>\r\n            </>\r\n          )\r\n        )}\r\n      </Card>\r\n\r\n      {now && state !== 0 && (\r\n        <Suspense fallback={<></>}>\r\n          <Recomendation nowPlaying={nowPlaying} state={state} />\r\n        </Suspense>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"sourceRoot":""}