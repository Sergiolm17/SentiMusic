{"version":3,"sources":["files/Happy.svg","files/Sad.svg","files/DOMO.svg","files/Logo.svg","components/card.jsx","components/ahref.jsx","components/emoji.jsx","components/list.jsx","hooks/User.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","children","normal","className","href","newtab","target","state","onClick","src","Happy","Sad","alt","artist","name","preview_url","valence","useState","disabled","setdisabled","style","height","controls","preload","spotifyApi","SpotifyWebApi","urlprod","appurl","appurl_refresh","querystring","require","useAccessToken","error","params","getHashParams","loggedIn","setloggedIn","access_token","localStorage","getItem","setaccess_token","refresh_token","useEffect","removeItem","console","log","fetch","stringify","then","response","json","data","setItem","setAccessToken","useGetNowPlaying","albumArt","is_playing","uri","id","nowPlaying","setnowPlaying","current","setcurrent","setError","getCurrent","interval","setInterval","getMyCurrentPlaybackState","err","currently_playing_type","item","album","images","url","artists","clearInterval","useRecomendation","recomendation","setrecomendation","useCallsaveData","musicsaved","seed_tracks","join","length","getRecommendations","limit","market","min_valence","max_valence","tracks","map","track","getAudioFeaturesForTrack","audiodetail","push","setmusicsaved","getMySavedTracks","offset","items","added_at","newdata","useGetPlaylist","me","setme","getMe","user","useGetMe","playlist","setplaylist","exist","setexist","getUserPlaylists","device","cock_playlist","document","cookie","split","a","dat","find","o","obj","useCreatePlaylist","playlist_id","setplaylist_id","getPlaylist","createPlaylist","public","collaborative","description","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","imgStyle","margin","App","setState","titlePlaylist","external_urls","Domo","Logo","spotify","music","indexaudio","key","addTracksToPlaylist","play","alert","addtoPlaylist","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9de05f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Happy.d51ce461.svg\";","module.exports = __webpack_public_path__ + \"static/media/Sad.28aa5087.svg\";","module.exports = __webpack_public_path__ + \"static/media/DOMO.554d941c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logo.75f61d59.svg\";","import React from \"react\";\r\nimport \"./card.scss\";\r\nexport default ({ children, normal }) => {\r\n  return <div className={`card ${normal && \"normal\"}`}>{children}</div>;\r\n};\r\n","import React from \"react\";\r\nimport \"./href.scss\";\r\nexport default ({ children, href, newtab }) => {\r\n  return (\r\n    <a href={href} target={newtab ? \"_blank\" : \"_self\"} className=\"button-domo\">\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Happy from \"../files/Happy.svg\";\r\nimport Sad from \"../files/Sad.svg\";\r\nimport \"./Emoji.scss\";\r\nconst EmojiStyle = {\r\n  margin: \"14px\"\r\n};\r\nexport default ({ state, onClick }) => {\r\n  return (\r\n    <button className=\"buttonStyle\" onClick={onClick}>\r\n      <img\r\n        src={state ? Happy : Sad}\r\n        alt={state ? \"Happy\" : \"Sad\"}\r\n        className=\"EmojiStyle\"\r\n      ></img>\r\n    </button>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./list.scss\";\r\nexport default ({ artist, name, src, preview_url, valence, onClick }) => {\r\n  const [disabled, setdisabled] = useState(false);\r\n  const click = () => {\r\n    setdisabled(true);\r\n    onClick();\r\n  };\r\n  return (\r\n    <div className=\"list-container\">\r\n      <div>\r\n        <img alt={name} src={src} style={{ height: \"50px\" }} />\r\n      </div>\r\n      <div className=\"list-who\">\r\n        <span className=\"list-name\">{name}</span>\r\n        <span className=\"list-artist\">{artist}</span>\r\n      </div>\r\n      <div className=\"list-valence\">\r\n        <span className=\"valence\">{valence}</span>\r\n      </div>\r\n      <div\r\n        className={`list-audio ${disabled ? \"active-audio\" : \"disabled-audio\"}`}\r\n      >\r\n        <audio controls={true} src={preview_url} preload=\"none\">\r\n          Your browser does not support the\r\n          <code>audio</code> element.\r\n        </audio>\r\n      </div>\r\n      {!disabled && (\r\n        <button disabled={disabled} className=\"add-music\" onClick={click}>\r\n          ADD\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n/*\r\n  <div>\r\n        <audio controls={true} src={preview_url} preload=\"none\">\r\n          Your browser does not support the\r\n          <code>audio</code> element.\r\n        </audio>\r\n      </div>\r\n\r\n*/\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\n\r\nconst spotifyApi = new SpotifyWebApi();\r\nconst urllocal = \"http://34.68.6.184:4001\";\r\nconst urlprod = \"https://sentimusic.herokuapp.com\";\r\n\r\nlet appurl =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? urlprod + \"/login\"\r\n    : urllocal + \"/login\";\r\nlet appurl_refresh =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? urlprod + \"/refresh_token\"\r\n    : urllocal + \"/refresh_token\";\r\nvar querystring = require(\"querystring\");\r\n\r\nfunction useAccessToken(error) {\r\n  const params = getHashParams();\r\n\r\n  const [loggedIn, setloggedIn] = useState(false);\r\n  const [access_token, setaccess_token] = useState(\r\n    params.access_token || localStorage.getItem(\"access_token\")\r\n  );\r\n  const [refresh_token, setRefresh_token] = useState(\r\n    params.refresh_token || localStorage.getItem(\"refresh_token\")\r\n  );\r\n  useEffect(() => {\r\n    if (error) {\r\n      setaccess_token(null);\r\n      localStorage.removeItem(\"access_token\");\r\n      console.log(refresh_token);\r\n\r\n      if (refresh_token)\r\n        fetch(\r\n          appurl_refresh +\r\n            querystring.stringify({\r\n              refresh_token\r\n            })\r\n        )\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            console.log(data);\r\n            setaccess_token(data.access_token);\r\n          }); //localStorage.removeItem(\"refresh_token\");\r\n    } else {\r\n      localStorage.setItem(\"access_token\", access_token);\r\n      localStorage.setItem(\"refresh_token\", refresh_token);\r\n      //const access_token_local = localStorage.getItem(\"access_token\");\r\n      //setaccess_token(access_token);\r\n    }\r\n  }, [access_token, error]);\r\n  useEffect(() => {\r\n    if (access_token) {\r\n      spotifyApi.setAccessToken(access_token);\r\n    }\r\n    setloggedIn(access_token ? true : false);\r\n  }, [access_token]);\r\n  return loggedIn;\r\n}\r\nconst useGetMe = data => {\r\n  const loggedIn = useAccessToken();\r\n\r\n  const [me, setme] = useState({});\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      spotifyApi.getMe().then(user => {\r\n        //console.log(user);\r\n        setme(user);\r\n      });\r\n    }\r\n  }, [loggedIn]);\r\n  return [me];\r\n};\r\nconst useGetNowPlaying = () => {\r\n  const [idcurrent, setidcurrent] = useState(null);\r\n  const [nowPlaying, setnowPlaying] = useState({\r\n    name: \"\",\r\n    artist: \"\",\r\n    albumArt: \"\",\r\n    is_playing: false,\r\n    uri: \"\",\r\n    id: \"\"\r\n  });\r\n  const [current, setcurrent] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const loggedIn = useAccessToken(error);\r\n\r\n  useEffect(() => {\r\n    //if (!loggedIn) return null;\r\n    getCurrent();\r\n    const interval = setInterval(() => loggedIn && getCurrent(), 3000);\r\n    function getCurrent() {\r\n      if (loggedIn)\r\n        spotifyApi.getMyCurrentPlaybackState((err, response) => {\r\n          if (err) {\r\n            setError(true);\r\n            console.error(err);\r\n          } else {\r\n            setcurrent(response ? response.is_playing : false);\r\n            setError(false);\r\n\r\n            if (response && response.currently_playing_type !== \"episode\") {\r\n              setnowPlaying({\r\n                name: response.item.name,\r\n                albumArt: response.item.album.images[0].url,\r\n                is_playing: response.is_playing,\r\n                uri: response.item.uri,\r\n                id: response.item.id,\r\n                artist: response.item.artists[0].name\r\n              });\r\n            }\r\n          }\r\n        });\r\n    }\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [loggedIn]);\r\n\r\n  return [loggedIn, nowPlaying, current, error];\r\n};\r\n\r\nconst useGetDevice = nowPlaying => {\r\n  const [devices, setdevices] = useState([]);\r\n  useEffect(() => {\r\n    if (nowPlaying.id) {\r\n      spotifyApi.getMyDevices().then(data => setdevices(data.devices));\r\n    }\r\n  }, [nowPlaying.id]);\r\n  return [devices];\r\n};\r\n\r\nconst useRecomendation = (nowPlaying, state) => {\r\n  const [recomendation, setrecomendation] = useState([]);\r\n  const [musicsaved] = useCallsaveData([]);\r\n  useEffect(() => {\r\n    const seed_tracks = `${\r\n      nowPlaying.id ? nowPlaying.id + \",\" : \"\"\r\n    }${musicsaved.join(\",\")}`;\r\n    if (musicsaved.length > 0 && state !== 0) {\r\n      spotifyApi\r\n        .getRecommendations({\r\n          limit: 4,\r\n          market: \"PE\",\r\n          //seed_artists: \"4NHQUGzhtTLFvgF5SZesLK\",\r\n          seed_tracks,\r\n\r\n          //min_energy: 0.4,\r\n          min_valence: state === 1 ? 0.5 : 0,\r\n          max_valence: state === 1 ? 1 : 0.5\r\n          //min_popularity: 90\r\n        })\r\n        .then(data => {\r\n          const tracks = [];\r\n          data.tracks.map(track => {\r\n            spotifyApi.getAudioFeaturesForTrack(track.id).then(audiodetail => {\r\n              track = { ...track, ...audiodetail };\r\n              tracks.push(track);\r\n            });\r\n          });\r\n          setrecomendation(tracks);\r\n        });\r\n    }\r\n  }, [state /*, nowPlaying.id*/]);\r\n  return [recomendation];\r\n};\r\nconst useCallsaveData = () => {\r\n  const [musicsaved, setmusicsaved] = useState([]);\r\n  useEffect(() => {\r\n    spotifyApi\r\n      .getMySavedTracks({ limit: 4, offset: 0, market: \"PE\" })\r\n      .then(data => {\r\n        const parsedata = data.items.map(item => {\r\n          return { added_at: item.added_at, ...item.track };\r\n        });\r\n        const newdata = data.items.map(item => item.track.id);\r\n        setmusicsaved(newdata);\r\n      });\r\n  }, []);\r\n  return [musicsaved];\r\n};\r\n\r\nconst useRecomendationPlus = state => {\r\n  const [recomendationPlus, setrecomendationPlus] = useState([]);\r\n  const [musicsaved] = useCallsaveData();\r\n  useEffect(() => {\r\n    if (state !== 0) {\r\n      spotifyApi\r\n        .getRecommendations({\r\n          limit: 4,\r\n          market: \"PE\",\r\n          //seed_artists: \"4NHQUGzhtTLFvgF5SZesLK\",\r\n          seed_tracks: musicsaved.join(\",\"),\r\n          market: \"PE\"\r\n          //min_energy: 0.4,\r\n          //min_valence: state ? 0.5 : 0,\r\n          //max_valence: state ? 1 : 0.5\r\n          //min_popularity: 90\r\n        })\r\n        .then(data => {\r\n          let tracks = [];\r\n          data.tracks.map(track => {\r\n            spotifyApi.getAudioFeaturesForTrack(track.id).then(audiodetail => {\r\n              const allRules = Object.assign({}, track, audiodetail);\r\n\r\n              tracks.push(allRules);\r\n            });\r\n          });\r\n          setrecomendationPlus(tracks);\r\n        });\r\n    }\r\n  }, []);\r\n  return recomendationPlus;\r\n};\r\nconst useGetAudio = nowPlaying => {\r\n  const [audiodetail, setaudiodetail] = useState({});\r\n  useEffect(() => {\r\n    if (nowPlaying.id) {\r\n      spotifyApi\r\n        .getAudioFeaturesForTrack(nowPlaying.id)\r\n        .then(audiodetail => setaudiodetail(audiodetail));\r\n    }\r\n  }, [nowPlaying.id]);\r\n  return [audiodetail];\r\n};\r\nconst useGetPlaylist = () => {\r\n  const [me] = useGetMe();\r\n  const [playlist, setplaylist] = useState([]);\r\n  const [exist, setexist] = useState(0);\r\n  useEffect(() => {\r\n    if (me) {\r\n      spotifyApi.getUserPlaylists(me.id, { limit: 50 }).then(device => {\r\n        setplaylist(device.items);\r\n      });\r\n    }\r\n  }, [me]);\r\n  useEffect(() => {\r\n    if (playlist.length > 0) {\r\n      var read_cookies = document.cookie;\r\n      var split_read_cookie = read_cookies.split(\";\");\r\n      var parse = split_read_cookie.map(a => {\r\n        let dat = a.split(\"=\");\r\n        return { name: dat[0], data: dat[1] };\r\n      });\r\n      let cock_playlist = parse.find(o => o.name === \" playlist_id\");\r\n\r\n      let obj = playlist.find(o => o.name === \"Domo Playlist\");\r\n      setexist(obj ? 1 : 2);\r\n      if (obj) localStorage.setItem(\"playlist_id\", obj.id);\r\n      if (cock_playlist)\r\n        localStorage.setItem(\"playlist_id\", cock_playlist.data);\r\n    }\r\n    //console.log(playlist);\r\n  }, [playlist]);\r\n  return [me, exist];\r\n};\r\nconst useCreatePlaylist = () => {\r\n  const [me, exist] = useGetPlaylist();\r\n  const [playlist_id, setplaylist_id] = useState({});\r\n  useEffect(() => {\r\n    if (!me.id && exist !== 2) return console.log(\"esperando usuario\");\r\n    if (exist === 1) console.log(\"se detecto la playlist\");\r\n\r\n    if (localStorage.getItem(\"playlist_id\")) {\r\n      spotifyApi\r\n        .getPlaylist(localStorage.getItem(\"playlist_id\"))\r\n        .then(a => setplaylist_id(a));\r\n      return console.log(\"existe una playlist en local\");\r\n    }\r\n    spotifyApi\r\n      .createPlaylist(me.id, {\r\n        name: \"Domo Playlist\",\r\n        public: false,\r\n        collaborative: true,\r\n        description: \"Playlist de musica Recomendada\"\r\n      })\r\n      .then(device => {\r\n        localStorage.setItem(\"playlist_id\", device.id);\r\n        setplaylist_id(device);\r\n      });\r\n  }, [me, exist]);\r\n  return [playlist_id];\r\n};\r\nfunction addtoPlaylist(playlist_id, uri) {\r\n  console.log(playlist_id, uri);\r\n  spotifyApi.addTracksToPlaylist(playlist_id, [uri]).then(device => {\r\n    console.log(device);\r\n    spotifyApi.play();\r\n    alert(\"Se añadio con exito\");\r\n  });\r\n}\r\nfunction salir(params) {\r\n  localStorage.removeItem(\"access_token\");\r\n  localStorage.removeItem(\"refresh_token\");\r\n  localStorage.removeItem(\"playlist_id\");\r\n  document.cookie = \"playlist_id\" + \"=; Max-Age=0\";\r\n}\r\n/*\r\nconst getSearch = () => {\r\n  spotifyApi.search(\"WONDERLAND\", [\"track\"], { market: \"PE\" }).then(device => {\r\n    console.log(device);\r\n  });\r\n};\r\nconst createPlaylist = () => {\r\n  spotifyApi\r\n    .createPlaylist(me.id, {\r\n      name: \"Creado desde el server\",\r\n      public: false,\r\n      description: \"esta lpaylist es la recomendada\"\r\n    })\r\n    .then(device => {\r\n      console.log(device);\r\n    });\r\n};\r\nconst addToPlaylist = () => {\r\n  if (nowPlaying.uri)\r\n    spotifyApi\r\n      .addTracksToPlaylist(\"06sL90oZx5lI8mbaGzlgFD\", [nowPlaying.uri])\r\n      .then(device => {\r\n        console.log(device);\r\n      });\r\n};\r\nconst removeToPlaylist = () => {\r\n  if (nowPlaying.uri)\r\n    spotifyApi\r\n      .removeTracksFromPlaylist(\"06sL90oZx5lI8mbaGzlgFD\", [nowPlaying.uri])\r\n      .then(device => {\r\n        console.log(device);\r\n      });\r\n};\r\n*/\r\nconst getHashParams = () => {\r\n  var hashParams = {};\r\n  var e,\r\n    r = /([^&;=]+)=?([^&;]*)/g,\r\n    q = window.location.hash.substring(1);\r\n  e = r.exec(q);\r\n  while (e) {\r\n    hashParams[e[1]] = decodeURIComponent(e[2]);\r\n    e = r.exec(q);\r\n  }\r\n\r\n  return hashParams;\r\n};\r\nexport {\r\n  appurl,\r\n  useAccessToken,\r\n  useGetMe,\r\n  useGetNowPlaying,\r\n  useGetDevice,\r\n  useGetAudio,\r\n  useRecomendation,\r\n  useRecomendationPlus,\r\n  addtoPlaylist,\r\n  useGetPlaylist,\r\n  useCreatePlaylist\r\n  /*,\r\n  getSearch,\r\n  createPlaylist,\r\n  addToPlaylist,\r\n  removeToPlaylist\r\n  */\r\n};\r\n/*\r\n\r\n\r\n*/\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Card from \"./components/card\";\nimport Link from \"./components/ahref\";\nimport Title from \"./components/title\";\nimport Cover from \"./components/cover\";\nimport Emoji from \"./components/emoji\";\nimport Who from \"./components/who\";\nimport List from \"./components/list\";\n\nimport Domo from \"./files/DOMO.svg\";\nimport Logo from \"./files/Logo.svg\";\n\nimport {\n  appurl,\n  useGetNowPlaying,\n  useRecomendation,\n  useRecomendationPlus,\n  useGetAudio,\n  addtoPlaylist,\n  useGetPlaylist,\n  useCreatePlaylist\n} from \"./hooks/User\";\n\nconst imgStyle = {\n  margin: \"20px\"\n};\nfunction App() {\n  //const [me] = useGetMe();\n  const [loggedIn, nowPlaying, current, error] = useGetNowPlaying();\n  /// const [devices] = useGetDevice(nowPlaying);\n  //const [audiodetail] = useGetAudio(nowPlaying);\n  const [state, setState] = useState(0);\n  const [Playlist] = useGetPlaylist();\n\n  //const recomendationPlus = useRecomendationPlus(state);\n  const [recomendation] = useRecomendation(nowPlaying, state);\n  const [playlist_id] = useCreatePlaylist();\n\n  const titlePlaylist = (\n    <h2>\n      {state === 0\n        ? \"Playlist automatica\"\n        : state === 1\n        ? \"Playlist Feliz\"\n        : \"Modo Sad\"}\n    </h2>\n  );\n  /*\n  const recomendacionPlus = recomendationPlus.map((music, indexaudio) => (\n    <List\n      key={music.id}\n      artist={music.artists[0].name}\n      name={music.name}\n      src={music.album.images[0].url}\n      preview_url={music.preview_url}\n      valence={music.valence}\n    />\n  ));\n*/\n  console.log(playlist_id.external_urls);\n\n  if (!loggedIn || error) {\n    return (\n      <div className=\"App-header\">\n        <Card>\n          <p>\n            <img src={Domo} alt=\"texto\" style={imgStyle}></img>\n          </p>\n          <p>\n            <img src={Logo} alt=\"Logo Domo\" style={imgStyle}></img>\n          </p>\n          <Link href={appurl} style={imgStyle}>\n            Iniciar sesion con spotify\n          </Link>\n        </Card>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"App-header\">\n        <Card>\n          <h2>¿Como te quieres sentir ?</h2>\n          <Emoji onClick={() => setState(1)} state={true}></Emoji>\n          <Emoji onClick={() => setState(2)} state={false}></Emoji>\n        </Card>\n        {state > 0 && (\n          <Card normal>\n            {titlePlaylist}\n            {playlist_id.external_urls && (\n              <Link\n                href={playlist_id.external_urls.spotify}\n                style={imgStyle}\n                newtab\n              >\n                Ir a la playlist creada\n              </Link>\n            )}\n            {recomendation.map((music, indexaudio) => (\n              <List\n                key={music.id}\n                artist={music.artists[0].name}\n                name={music.name}\n                src={music.album.images[0].url}\n                preview_url={music.preview_url}\n                valence={music.valence}\n                onClick={() => addtoPlaylist(playlist_id.id, music.uri)}\n              ></List>\n            ))}\n          </Card>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App-header\">\n      {nowPlaying.name && loggedIn ? (\n        <Title>Ahora reproduciendo</Title>\n      ) : (\n        <>\n          <Card>\n            <p className=\"Title\">Ponle play para recomendarte</p>\n          </Card>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n/*\n{nowPlaying.name && !current && (\n        <Card normal>\n          <p className=\"Title\">Ponle play para recomendarte</p>\n          <Who\n            name={nowPlaying.name}\n            artist={`${nowPlaying.artist}  ${audiodetail.valence}`}\n          ></Who>\n        </Card>\n      )}\n      {nowPlaying.name && current && (\n        <Card normal>\n          <Cover nowPlaying={nowPlaying}></Cover>\n          <Who\n            name={nowPlaying.name}\n            artist={`${nowPlaying.artist} ${audiodetail.valence}`}\n          ></Who>\n        </Card>\n      )}\n      {nowPlaying.name && (\n        <Card>\n          <h2>¿Como te quieres sentir ?</h2>\n          <Emoji onClick={() => setState(1)} state={true}></Emoji>\n          <Emoji onClick={() => setState(2)} state={false}></Emoji>\n        </Card>\n      )}\n*/\n/*\n <Card>\n        <Slider min={0} max={1} defaultValue={1} handle={handle} step={0.2} />\n      </Card>\n      <CircularProgressbar\n        value={percentage}\n        className=\"progress\"\n        styles={buildStyles({\n          rotation: 0.25,\n          strokeLinecap: \"round\",\n          pathTransitionDuration: 0.5,\n\n          pathColor: `#F27A54`,\n          trailColor: \"transparent\"\n        })}\n      ></CircularProgressbar>\n\n        {me.display_name && \"hola \" + me.display_name}\n\n        {devices.length > 0 &&\n          \"se encontro \" + devices.length + \" dispositivos\"}\n        {devices.map(device => (\n          <li key={device.id}>\n            {device.name} {device.tylie}\n          </li>\n        ))}\n   <p>acousticness- {audiodetail.acousticness}</p>\n\n            <p>danceability- {audiodetail.danceability}</p>\n            <p>duration_ms- {audiodetail.duration_ms}</p>\n            <p>energy- {audiodetail.energy}</p>\n            <p>instrumentalness- {audiodetail.instrumentalness}</p>\n            <p>key- {audiodetail.key}</p>\n            <p>liveness- {audiodetail.liveness}</p>\n            <p>loudness- {audiodetail.loudness}</p>\n            <p>duration_ms- {audiodetail.duration_ms}</p>\n            <p>mode- {audiodetail.mode}</p>\n            <p>speechiness- {audiodetail.speechiness}</p>\n            <p>tempo- {audiodetail.tempo}</p>\n            <p>time_signature- {audiodetail.time_signature}</p>\n            <p>valence- {audiodetail.valence}</p>\n*/\n/*\n\n     \n      {loggedIn && (\n        <>\n          <button onClick={() => getSearch()}>Search</button>\n          <button onClick={() => createPlaylist()}>createPlaylist</button>\n        </>\n      )}\n      {nowPlaying.uri && (\n        <>\n          <button onClick={() => getRecomendation()}>Get Recomendacion</button>\n          <button onClick={() => getAudio()}>getAudio</button>\n          <button onClick={() => addToPlaylist()}>addToPlaylist</button>\n          <button onClick={() => removeToPlaylist()}>removeToPlaylist</button>\n        </>\n      )}\n     \n      {devices.map(device => (\n        <p key={device.id}>\n          {device.name} {device.type}\n        </p>\n      ))}\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}